# Logfile created on Wed Apr 03 13:51:13 -0700 2019 by logger.rb/22285
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mMysql::Error: Table 'demo_campground.options' doesn't exist: SELECT * FROM `options` LIMIT 1[0m
  [4;35;1mIntegration Load (0.0ms)[0m   [0mMysql::Error: Table 'demo_campground.integrations' doesn't exist: SELECT * FROM `integrations` LIMIT 1[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mMysql::Error: Table 'demo_campground.options' doesn't exist: SELECT * FROM `options` LIMIT 1[0m
  [4;35;1mOption Load (0.0ms)[0m   [0mMysql::Error: Table 'demo_campground.options' doesn't exist: SELECT * FROM `options` LIMIT 1[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mMysql::Error: Table 'demo_campground.options' doesn't exist: SELECT * FROM `options` LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (38.0ms)[0m   [0;1mCREATE TABLE `archives` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(66) DEFAULT '' NOT NULL, `address` varchar(32), `city` varchar(32), `state` varchar(4), `mail_code` varchar(12), `adults` smallint DEFAULT 2, `pets` smallint DEFAULT 0, `kids` smallint DEFAULT 0, `discount_name` varchar(32) DEFAULT '', `startdate` date, `enddate` date, `deposit` decimal(8,2) DEFAULT 0.0, `total_charge` decimal(8,2) DEFAULT 0.0, `special_request` varchar(255), `slides` tinyint DEFAULT 0, `length` mediumint, `rig_age` mediumint, `vehicle_license` varchar(20), `vehicle_state` varchar(16), `rigtype_name` varchar(32) DEFAULT '', `space_name` varchar(32) DEFAULT '', `group_name` varchar(32), `close_reason` varchar(128), `phone` varchar(18), `email` varchar(128), `country` varchar(32), `canceled` date, `extras` varchar(255), `tax_str` text, `idnumber` varchar(24), `log` text, `vehicle_license_2` varchar(20), `vehicle_state_2` varchar(16), `phone_2` varchar(18), `recommender` varchar(32), `seasonal` tinyint(1) DEFAULT 0, `reservation_id` int(11) DEFAULT 0, `selected` tinyint(1) DEFAULT 0, `address2` varchar(32), `payments` text) ENGINE=InnoDB[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `blackouts` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `startdate` date, `enddate` date, `active` tinyint(1) DEFAULT 1, `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `campers` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `last_name` varchar(32) DEFAULT '' NOT NULL, `first_name` varchar(32) DEFAULT '' NOT NULL, `address` varchar(32) DEFAULT '' NOT NULL, `city` varchar(32) DEFAULT '' NOT NULL, `state` varchar(16) DEFAULT '' NOT NULL, `mail_code` varchar(12) DEFAULT '' NOT NULL, `activity` date, `lock_version` int(11) DEFAULT 0, `phone` varchar(18), `email` varchar(128), `idnumber` varchar(24), `country_id` int(11) DEFAULT 0, `phone_2` varchar(18), `address2` varchar(32), `notes` text, `addl` text) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `campers`[0m
  [4;36;1mSQL (24.0ms)[0m   [0;1mCREATE INDEX `index_campers_on_last_name` ON `campers` (`last_name`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `card_transactions` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `account` varchar(255), `expiry` varchar(255), `amount` decimal(12,2) DEFAULT 0.0, `currency` varchar(255) DEFAULT 'USD', `retref` varchar(255), `reservation_id` int(11), `authcode` varchar(255), `avsresp` varchar(255), `batchid` varchar(255), `cvvresp` varchar(255), `name` varchar(255), `respproc` varchar(255), `resptext` varchar(255), `respcode` varchar(255), `respstat` varchar(255), `signature` varchar(255), `token` varchar(255), `accttype` varchar(255), `address` varchar(255), `city` varchar(255), `region` varchar(255), `country` varchar(255), `postal` varchar(255), `ecomind` varchar(255), `track` varchar(255), `tokenize` varchar(255), `mytoken` varchar(255), `payment_id` int(11), `card_present` tinyint(1), `session_key` varchar(255), `created_at` datetime, `updated_at` datetime, `process_mode` int(11), `cvv2` varchar(255) DEFAULT '') ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `card_transactions`[0m
  [4;36;1mSQL (24.0ms)[0m   [0;1mCREATE INDEX `index_card_transactions_on_reservation_id` ON `card_transactions` (`reservation_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `charges` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `reservation_id` int(11), `season_id` int(11) DEFAULT 1, `start_date` date, `end_date` date, `period` float, `rate` decimal(8,2) DEFAULT 0.0, `amount` decimal(8,2) DEFAULT 0.0, `discount` decimal(8,2) DEFAULT 0.0, `charge_units` int(11), `temp` tinyint(1) DEFAULT 0) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `charges`[0m
  [4;36;1mSQL (25.0ms)[0m   [0;1mCREATE INDEX `index_charges_on_reservation_id` ON `charges` (`reservation_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `charges`[0m
  [4;36;1mSQL (16.0ms)[0m   [0;1mCREATE INDEX `index_charges_on_start_date` ON `charges` (`start_date`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `colors` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(255), `value` varchar(255)) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `countries` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `created_at` datetime, `updated_at` datetime, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `countries`[0m
  [4;36;1mSQL (22.0ms)[0m   [0;1mCREATE INDEX `index_countries_on_position` ON `countries` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `creditcards` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `is_credit_card` tinyint(1) DEFAULT 1, `validate_cc_number` tinyint(1) DEFAULT 0, `use_expiration` tinyint(1) DEFAULT 0, `validate_expiration` tinyint(1) DEFAULT 0, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `creditcards`[0m
  [4;36;1mSQL (23.0ms)[0m   [0;1mCREATE INDEX `index_creditcards_on_position` ON `creditcards` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `discounts` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `discount_percent` decimal(5,2) DEFAULT 0.0, `disc_appl_month` tinyint(1) DEFAULT 0, `disc_appl_week` tinyint(1) DEFAULT 0, `disc_appl_seasonal` tinyint(1) DEFAULT 0, `disc_appl_daily` tinyint(1) DEFAULT 1, `amount` decimal(8,2) DEFAULT 0.0, `amount_daily` decimal(11,5) DEFAULT 0.0, `amount_weekly` decimal(11,5) DEFAULT 0.0, `amount_monthly` decimal(12,5) DEFAULT 0.0, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (2.0ms)[0m   [0mSHOW KEYS FROM `discounts`[0m
  [4;36;1mSQL (25.0ms)[0m   [0;1mCREATE INDEX `index_discounts_on_position` ON `discounts` (`position`)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (8.0ms)[0m   [0;1mCREATE TABLE `dynamic_strings` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(255), `text` blob, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `dynamic_strings`[0m
  [4;36;1mSQL (22.0ms)[0m   [0;1mCREATE INDEX `index_dynamic_strings_on_name` ON `dynamic_strings` (`name`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (20.0ms)[0m   [0;1mCREATE TABLE `emails` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `smtp_address` varchar(64) DEFAULT '', `smtp_port` int(11) DEFAULT 25, `smtp_domain` varchar(64) DEFAULT '', `smtp_authentication_id` int(11) DEFAULT 1, `smtp_username` varchar(64) DEFAULT '', `smtp_password` varchar(64) DEFAULT '', `charset` varchar(255) DEFAULT 'utf-8', `cc` varchar(255) DEFAULT '', `bcc` varchar(255) DEFAULT '', `sender` varchar(255) DEFAULT '', `reply` varchar(255) DEFAULT '', `confirm_subject` varchar(255) DEFAULT 'Reservation Confirmation', `update_subject` varchar(255) DEFAULT 'Reservation Update', `feedback_subject` varchar(255) DEFAULT 'Reservation Feedback', `remote_res_subject` varchar(255) DEFAULT 'Reservation Received', `remote_res_confirm_subject` varchar(255) DEFAULT 'Reservation Confirmed', `remote_res_reject_subject` varchar(255) DEFAULT 'Reservation Not Confirmed') ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `extra_charges` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `extra_id` int(11), `reservation_id` int(11), `number` int(11) DEFAULT 0, `days` int(11) DEFAULT 0, `weeks` int(11) DEFAULT 0, `months` int(11) DEFAULT 0, `daily_charges` decimal(12,2) DEFAULT 0.0, `weekly_charges` decimal(12,2) DEFAULT 0.0, `monthly_charges` decimal(12,2) DEFAULT 0.0, `initial` decimal(12,2) DEFAULT 0.0, `final` decimal(12,2) DEFAULT 0.0, `measured_charge` decimal(12,2) DEFAULT 0.0, `updated_on` date, `charge` decimal(12,2) DEFAULT 0.0, `measured_rate` decimal(12,6) DEFAULT 0.0, `created_on` date, `precision` int(11) DEFAULT 2) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `extra_charges`[0m
  [4;36;1mSQL (25.0ms)[0m   [0;1mCREATE INDEX `index_extra_charges_on_extra_id` ON `extra_charges` (`extra_id`)[0m
  [4;35;1mSQL (2.0ms)[0m   [0mSHOW KEYS FROM `extra_charges`[0m
  [4;36;1mSQL (16.0ms)[0m   [0;1mCREATE INDEX `index_extra_charges_on_reservation_id` ON `extra_charges` (`reservation_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `extras` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `counted` tinyint(1) DEFAULT 0, `daily` decimal(10,2) DEFAULT 0.0, `weekly` decimal(10,2) DEFAULT 0.0, `monthly` decimal(10,2) DEFAULT 0.0, `onetime` tinyint(1) DEFAULT 0, `charge` decimal(10,2) DEFAULT 0.0, `measured` tinyint(1) DEFAULT 0, `rate` decimal(12,6) DEFAULT 0.0, `unit_name` varchar(32), `occasional` tinyint(1) DEFAULT 0, `extra_type` int(11) DEFAULT 0, `position` int(11), `remote_display` tinyint(1) DEFAULT 1, `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `extras`[0m
  [4;36;1mSQL (23.0ms)[0m   [0;1mCREATE INDEX `index_extras_on_position` ON `extras` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (12.0ms)[0m   [0;1mCREATE TABLE `extras_taxrates` (`extra_id` int(11) NOT NULL, `taxrate_id` int(11) NOT NULL) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `extras_taxrates`[0m
  [4;36;1mSQL (13.0ms)[0m   [0;1mCREATE INDEX `index_extras_taxrates_on_extra_id` ON `extras_taxrates` (`extra_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `extras_taxrates`[0m
  [4;36;1mSQL (14.0ms)[0m   [0;1mCREATE INDEX `index_extras_taxrates_on_taxrate_id` ON `extras_taxrates` (`taxrate_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `groups` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `expected_number` int(11) DEFAULT 0 NOT NULL, `startdate` date, `enddate` date, `camper_id` int(11)) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (20.0ms)[0m   [0;1mCREATE TABLE `integrations` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT 'None', `pp_cert_id` varchar(32), `pp_business` varchar(128), `pp_currency_code` varchar(12) DEFAULT 'USD', `pp_country` varchar(12) DEFAULT 'US', `pp_url` varchar(128) DEFAULT 'https://www.paypal.com/cgi-bin/webscr', `fd_login` varchar(32), `fd_transaction_key` varchar(32), `fd_response_key` varchar(32), `fd_currency_code` varchar(12) DEFAULT 'USD', `fd_country` varchar(12) DEFAULT 'US', `fd_url` varchar(128), `created_at` datetime, `updated_at` datetime, `cc_merchant_id` varchar(255), `cc_api_username` varchar(255), `cc_api_password` varchar(255), `cc_endpoint` varchar(255) DEFAULT 'https://boltgw.cardconnect.com:6443', `cc_bolt_endpoint` varchar(255) DEFAULT 'https://bolt-uat.cardpointe.com:6443', `cc_bolt_api_key` varchar(255), `cc_currency_code` varchar(255) DEFAULT 'USD', `cc_hsn` varchar(255), `cc_greeting` varchar(255) DEFAULT 'Open Campground', `cc_use_signature` tinyint(1) DEFAULT 1, `cc_display_amount` tinyint(1) DEFAULT 0, `cc_use_cvv` tinyint(1) DEFAULT 1, `cc_use_zip` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `mail_templates` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `body` text, `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (23.0ms)[0m   [0;1mCREATE TABLE `options` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `use_country` tinyint(1) DEFAULT 0, `use_id` tinyint(1) DEFAULT 0, `unit` varchar(12) DEFAULT '$', `separator` varchar(2) DEFAULT '.', `delimiter` varchar(2) DEFAULT ',', `header` text, `trailer` text, `use_login` tinyint(1) DEFAULT 0, `sa_columns` int(11) DEFAULT 120, `max_spacename` int(11) DEFAULT 3, `disp_rows` int(11) DEFAULT 12, `find_by_id` tinyint(1) DEFAULT 0, `no_vehicles` int(11) DEFAULT 1, `no_phones` int(11) DEFAULT 1, `lookback` int(11) DEFAULT 7, `use_recommend` tinyint(1) DEFAULT 1, `use_seasonal` tinyint(1) DEFAULT 0, `season_start` date DEFAULT '2012-01-01', `season_end` date DEFAULT '2012-12-31', `print` tinyint(1) DEFAULT 0, `use_confirm_email` tinyint(1) DEFAULT 0, `res_list_sort` varchar(255) DEFAULT 'unconfirmed_remote desc, startdate, group_id, spaces.position asc', `inpark_list_sort` varchar(255) DEFAULT 'unconfirmed_remote desc, enddate, startdate, group_id, spaces.position asc', `archive_list_sort` varchar(255) DEFAULT 'id', `use_autologin` tinyint(1) DEFAULT 0, `use_override` tinyint(1) DEFAULT 0, `override_by_all` tinyint(1) DEFAULT 0, `use_2nd_address` tinyint(1) DEFAULT 0, `use_remote_reservations` tinyint(1) DEFAULT 0, `home` varchar(255), `locale` varchar(16) DEFAULT 'en', `use_checkout_time` tinyint(1) DEFAULT 0, `checkout_time` time, `use_reserve_by_wk` tinyint(1) DEFAULT 0, `remote_discount` tinyint(1) DEFAULT 0, `remote_recommendations` tinyint(1) DEFAULT 0, `use_onetime_discount` tinyint(1) DEFAULT 0, `list_payments` tinyint(1) DEFAULT 0, `keep_reservations` int(11) DEFAULT 13, `use_feedback` tinyint(1) DEFAULT 0, `require_gateway` tinyint(1) DEFAULT 1, `allow_gateway` tinyint(1) DEFAULT 0, `auto_checkin_remote` tinyint(1) DEFAULT 0, `current_version` varchar(16), `current_revision` varchar(16), `ftp_server` varchar(128), `ftp_account` varchar(32), `ftp_passwd` varchar(32), `match_firstname` tinyint(1) DEFAULT 0, `match_city` tinyint(1) DEFAULT 0, `js` text, `remote_css` text, `remote_js` text, `variable_rates` tinyint(1) DEFAULT 0, `use_update` tinyint(1) DEFAULT 1, `use_cc_fee` tinyint(1) DEFAULT 1, `tabs` tinyint(1) DEFAULT 0, `require_email` tinyint(1) DEFAULT 0, `require_phone` tinyint(1) DEFAULT 0, `css` text, `use_remote_res_email` tinyint(1) DEFAULT 1, `use_remote_res_confirm` tinyint(1) DEFAULT 1, `use_remote_res_reject` tinyint(1) DEFAULT 1, `rates_decimal` int(11) DEFAULT 2, `use_rig_age` tinyint(1) DEFAULT 1, `use_length` tinyint(1) DEFAULT 1, `disp_site_length` tinyint(1) DEFAULT 1, `use_rig_type` tinyint(1) DEFAULT 1, `use_slides` tinyint(1) DEFAULT 1, `use_adults` tinyint(1) DEFAULT 1, `use_children` tinyint(1) DEFAULT 1, `use_pets` tinyint(1) DEFAULT 1, `use_remote_age` tinyint(1) DEFAULT 1, `use_remote_length` tinyint(1) DEFAULT 1, `disp_remote_length` tinyint(1) DEFAULT 1, `use_remote_rig_type` tinyint(1) DEFAULT 1, `use_remote_slides` tinyint(1) DEFAULT 1, `use_remote_adults` tinyint(1) DEFAULT 1, `use_remote_children` tinyint(1) DEFAULT 1, `use_remote_pets` tinyint(1) DEFAULT 1, `inline_subtotal` tinyint(1) DEFAULT 0, `use_storage` tinyint(1) DEFAULT 0, `use_closed` tinyint(1) DEFAULT 0, `closed_start` date, `closed_end` date, `all_onetime_discount` tinyint(1) DEFAULT 0, `all_backup` tinyint(1) DEFAULT 1, `all_manage_backup` tinyint(1) DEFAULT 0, `all_manage_logs` tinyint(1) DEFAULT 0, `all_manage_payments` tinyint(1) DEFAULT 0, `all_manage_measured` tinyint(1) DEFAULT 0, `all_checkin_rpt` tinyint(1) DEFAULT 1, `all_leave_rpt` tinyint(1) DEFAULT 1, `all_arrival_rpt` tinyint(1) DEFAULT 1, `all_departure_rpt` tinyint(1) DEFAULT 1, `all_in_park_rpt` tinyint(1) DEFAULT 1, `all_space_sum_rpt` tinyint(1) DEFAULT 1, `all_occupancy_rpt` tinyint(1) DEFAULT 0, `all_campers_rpt` tinyint(1) DEFAULT 0, `all_transactions_rpt` tinyint(1) DEFAULT 0, `all_payments_rpt` tinyint(1) DEFAULT 0, `all_measured_rpt` tinyint(1) DEFAULT 0, `all_recommend_rpt` tinyint(1) DEFAULT 0, `all_archives` tinyint(1) DEFAULT 0, `all_updates` tinyint(1) DEFAULT 0, `show_available` tinyint(1) DEFAULT 1, `show_remote_available` tinyint(1) DEFAULT 1, `express` tinyint(1) DEFAULT 0, `use_discount` tinyint(1) DEFAULT 1, `use_links` tinyint(1) DEFAULT 0, `cookie_token` varchar(255), `session_token` varchar(255), `use_envelope` tinyint(1) DEFAULT 0, `margin_top` varchar(12) DEFAULT '0.5in', `margin_left` varchar(12) DEFAULT '0.56in', `margin_bottom` varchar(12) DEFAULT '0.5in', `use_license` tinyint(1) DEFAULT 0, `use_map` tinyint(1) DEFAULT 0, `use_remote_map` tinyint(1) DEFAULT 0, `map` varchar(255), `remote_map` varchar(255), `edit_archives` tinyint(1) DEFAULT 1, `all_edit_archives` tinyint(1) DEFAULT 0, `require_first` tinyint(1) DEFAULT 0, `require_addr` tinyint(1) DEFAULT 0, `require_city` tinyint(1) DEFAULT 0, `require_state` tinyint(1) DEFAULT 0, `require_mailcode` tinyint(1) DEFAULT 0, `require_country` tinyint(1) DEFAULT 0, `require_id` tinyint(1) DEFAULT 0, `use_addl` tinyint(1) DEFAULT 0, `use_ssl` tinyint(1) DEFAULT 0, `l_require_first` tinyint(1) DEFAULT 0, `l_require_addr` tinyint(1) DEFAULT 0, `l_require_city` tinyint(1) DEFAULT 0, `l_require_state` tinyint(1) DEFAULT 0, `l_require_mailcode` tinyint(1) DEFAULT 0, `l_require_country` tinyint(1) DEFAULT 0, `l_require_id` tinyint(1) DEFAULT 0, `l_require_phone` tinyint(1) DEFAULT 0, `l_require_email` tinyint(1) DEFAULT 0, `deposit_type` int(11) DEFAULT 0, `deposit` decimal(11,5) DEFAULT 0.0, `remote_auto_accept` tinyint(1) DEFAULT 0, `date_format` varchar(12), `all_reservations_rpt` tinyint(1) DEFAULT 0, `all_card_transactions_rpt` tinyint(1) DEFAULT 0, `use_remote_sitetype` tinyint(1) DEFAULT 1, `all_troubleshoot` tinyint(1) DEFAULT 0, `use_variable_charge` tinyint(1) DEFAULT 0, `all_manage_variable` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `payments` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `amount` decimal(11,5) DEFAULT 0.0, `reservation_id` int(11), `created_at` datetime, `updated_at` datetime, `memo` varchar(255), `creditcard_id` int(11), `credit_card_no` varchar(20) DEFAULT '', `cc_expire` date, `name` varchar(32), `pmt_date` date, `cc_fee` decimal(6,2) DEFAULT 0.0) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `payments`[0m
  [4;36;1mSQL (24.0ms)[0m   [0;1mCREATE INDEX `index_payments_on_reservation_id` ON `payments` (`reservation_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `prices` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `prompts` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `display` varchar(32), `locale` varchar(16) DEFAULT 'en', `body` text, `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `rates` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `season_id` int(11), `price_id` int(11), `daily_rate` decimal(10,5) DEFAULT 0.0 NOT NULL, `weekly_rate` decimal(10,5) DEFAULT 0.0 NOT NULL, `monthly_rate` decimal(11,5) DEFAULT 0.0 NOT NULL, `seasonal_rate` decimal(8,2) DEFAULT 0.0 NOT NULL, `sunday` decimal(10,5) DEFAULT 0.0 NOT NULL, `monday` decimal(10,5) DEFAULT 0.0 NOT NULL, `tuesday` decimal(10,5) DEFAULT 0.0 NOT NULL, `wednesday` decimal(10,5) DEFAULT 0.0 NOT NULL, `thursday` decimal(10,5) DEFAULT 0.0 NOT NULL, `friday` decimal(10,5) DEFAULT 0.0 NOT NULL, `saturday` decimal(10,5) DEFAULT 0.0 NOT NULL, `monthly_storage` decimal(11,5) DEFAULT 0.0) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `rates`[0m
  [4;36;1mSQL (25.0ms)[0m   [0;1mCREATE INDEX `index_rates_on_price_id` ON `rates` (`price_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `rates`[0m
  [4;36;1mSQL (15.0ms)[0m   [0;1mCREATE INDEX `index_rates_on_season_id` ON `rates` (`season_id`)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `recommenders` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `created_at` datetime, `updated_at` datetime, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `recommenders`[0m
  [4;36;1mSQL (22.0ms)[0m   [0;1mCREATE INDEX `index_recommenders_on_position` ON `recommenders` (`position`)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `remember_logins` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `user_id` int(11), `token` varchar(255), `token_expires` datetime, `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `reservations` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `camper_id` int(11) DEFAULT 0 NOT NULL, `rigtype_id` mediumint DEFAULT 0 NOT NULL, `space_id` int(11) DEFAULT 0 NOT NULL, `discount_id` int(11), `group_id` int(11), `startdate` date NOT NULL, `enddate` date NOT NULL, `deposit` decimal(8,2) DEFAULT 0.0, `override_total` decimal(8,2) DEFAULT 0.0, `special_request` varchar(255), `slides` tinyint DEFAULT 0, `length` mediumint DEFAULT 0, `rig_age` mediumint DEFAULT 0, `vehicle_license` varchar(20), `vehicle_state` varchar(16), `checked_in` tinyint(1) DEFAULT 0, `adults` smallint DEFAULT 2, `pets` smallint DEFAULT 0, `kids` smallint DEFAULT 0, `lock_version` int(11) DEFAULT 0, `total` decimal(8,2) DEFAULT 0.0, `confirm` tinyint(1) DEFAULT 0, `created_at` datetime, `ext_charges` decimal(6,2) DEFAULT 0.0, `tax_str` text, `tax_amount` decimal(6,2) DEFAULT 0.0, `unconfirmed_remote` tinyint(1) DEFAULT 0, `log` text, `vehicle_license_2` varchar(20), `vehicle_state_2` varchar(16), `recommender_id` int(11) DEFAULT 0, `seasonal_rate` decimal(8,2) DEFAULT 0.0, `seasonal_charges` decimal(8,2) DEFAULT 0.0, `seasonal` tinyint(1) DEFAULT 0, `gateway_transaction` varchar(255), `onetime_discount` decimal(8,2) DEFAULT 0.0, `archived` tinyint(1) DEFAULT 0, `updated_on` date, `storage` tinyint(1) DEFAULT 0, `updated_at` datetime, `sitetype_id` int(11) DEFAULT 0, `next` int(11), `prev` int(11), `cancelled` tinyint(1) DEFAULT 0, `checked_out` tinyint(1) DEFAULT 0) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `reservations`[0m
  [4;36;1mSQL (23.0ms)[0m   [0;1mCREATE INDEX `index_reservations_on_enddate` ON `reservations` (`enddate`)[0m
  [4;35;1mSQL (2.0ms)[0m   [0mSHOW KEYS FROM `reservations`[0m
  [4;36;1mSQL (15.0ms)[0m   [0;1mCREATE INDEX `index_reservations_on_group_id` ON `reservations` (`group_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `reservations`[0m
  [4;36;1mSQL (15.0ms)[0m   [0;1mCREATE INDEX `index_reservations_on_space_id` ON `reservations` (`space_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `reservations`[0m
  [4;36;1mSQL (14.0ms)[0m   [0;1mCREATE INDEX `index_reservations_on_startdate` ON `reservations` (`startdate`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `rigtypes` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `rigtypes`[0m
  [4;36;1mSQL (22.0ms)[0m   [0;1mCREATE INDEX `index_rigtypes_on_position` ON `rigtypes` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `seasons` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `startdate` date, `enddate` date, `applies_to_weekly` tinyint(1) DEFAULT 1, `applies_to_monthly` tinyint(1) DEFAULT 1, `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `sitetypes` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `position` int(11), `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `sitetypes`[0m
  [4;36;1mSQL (22.0ms)[0m   [0;1mCREATE INDEX `index_sitetypes_on_position` ON `sitetypes` (`position`)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `sitetypes_taxrates` (`sitetype_id` int(11) NOT NULL, `taxrate_id` int(11) NOT NULL) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `sitetypes_taxrates`[0m
  [4;36;1mSQL (13.0ms)[0m   [0;1mCREATE INDEX `index_sitetypes_taxrates_on_sitetype_id` ON `sitetypes_taxrates` (`sitetype_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `sitetypes_taxrates`[0m
  [4;36;1mSQL (14.0ms)[0m   [0;1mCREATE INDEX `index_sitetypes_taxrates_on_taxrate_id` ON `sitetypes_taxrates` (`taxrate_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (9.0ms)[0m   [0;1mCREATE TABLE `smtp_authentications` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32)) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `space_allocs` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `space_id` int(11), `reservation_id` int(11), `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `spaces` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32) DEFAULT '' NOT NULL, `power_15a` tinyint(1) DEFAULT 0, `power_30a` tinyint(1) DEFAULT 0, `power_50a` tinyint(1) DEFAULT 0, `water` tinyint(1) DEFAULT 0, `sewer` tinyint(1) DEFAULT 0, `length` mediumint DEFAULT 0 NOT NULL, `width` mediumint DEFAULT 102, `sitetype_id` mediumint DEFAULT 0 NOT NULL, `price_id` mediumint DEFAULT 0 NOT NULL, `special_condition` varchar(255), `unavailable` tinyint(1) DEFAULT 0, `position` int(11), `remote_reservable` tinyint(1) DEFAULT 1, `current` decimal(8,2) DEFAULT 0.0, `active` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `spaces`[0m
  [4;36;1mSQL (23.0ms)[0m   [0;1mCREATE INDEX `index_spaces_on_position` ON `spaces` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `taxes` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `reservation_id` int(11), `name` varchar(32), `rate` varchar(32), `count` int(11) DEFAULT 0, `amount` decimal(6,2)) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `taxrates` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `is_percent` tinyint(1) DEFAULT 0, `percent` float DEFAULT 0.0, `amount` decimal(6,2) DEFAULT 0.0, `apl_week` tinyint(1) DEFAULT 0, `apl_month` tinyint(1) DEFAULT 0, `apl_seasonal` tinyint(1) DEFAULT 0, `apl_daily` tinyint(1) DEFAULT 1, `weekly_charge_daily` tinyint(1) DEFAULT 1, `monthly_charge_daily` tinyint(1) DEFAULT 1, `seasonal_charge_daily` tinyint(1) DEFAULT 1, `position` int(11), `active` tinyint(1) DEFAULT 1, `apl_storage` tinyint(1) DEFAULT 0) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `taxrates`[0m
  [4;36;1mSQL (24.0ms)[0m   [0;1mCREATE INDEX `index_taxrates_on_position` ON `taxrates` (`position`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `taxrates_variable_charges` (`variable_charge_id` int(11) NOT NULL, `taxrate_id` int(11) NOT NULL) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `taxrates_variable_charges`[0m
  [4;36;1mSQL (14.0ms)[0m   [0;1mCREATE INDEX `index_taxrates_variable_charges_on_taxrate_id` ON `taxrates_variable_charges` (`taxrate_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `taxrates_variable_charges`[0m
  [4;36;1mSQL (13.0ms)[0m   [0;1mCREATE INDEX `index_taxrates_variable_charges_on_variable_charge_id` ON `taxrates_variable_charges` (`variable_charge_id`)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `users` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `name` varchar(32), `hashed_password` varchar(255), `salt` varchar(255), `admin` tinyint(1) DEFAULT 0, `created_at` datetime, `updated_at` datetime, `remember_me` tinyint(1) DEFAULT 0, `remember_token` varchar(255), `remember_token_expires` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `variable_charges` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `reservation_id` int(11), `detail` varchar(255), `amount` decimal(12,2) DEFAULT 0.0, `taxable` tinyint(1) DEFAULT 1 NOT NULL, `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mCREATE TABLE `versions` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `release` varchar(16), `revision` varchar(16), `description` text, `install_pending` tinyint(1) DEFAULT 1) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mCREATE TABLE `schema_migrations` (`version` varchar(255) NOT NULL) ENGINE=InnoDB[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW KEYS FROM `schema_migrations`[0m
  [4;36;1mSQL (15.0ms)[0m   [0;1mCREATE UNIQUE INDEX `unique_schema_migrations` ON `schema_migrations` (`version`)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT version FROM `schema_migrations`[0m
  [4;35;1mSQL (2.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('87')[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('1')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('2')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('3')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('4')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('5')[0m
  [4;35;1mSQL (2.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('6')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('7')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('8')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('9')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('10')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('11')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('12')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('13')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('14')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('15')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('16')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('17')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('18')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('19')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('20')[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('21')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('22')[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('23')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('24')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('25')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('26')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('27')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('28')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('29')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('30')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('31')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('32')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('33')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('34')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('35')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('36')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('37')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('38')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('39')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('40')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('41')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('42')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('43')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('44')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('45')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('46')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('47')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('48')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('49')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('50')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('51')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('52')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('53')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('54')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('55')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('56')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('57')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('58')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('59')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('60')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('61')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('62')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('63')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('64')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('65')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('66')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('67')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('68')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('69')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('70')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('71')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('72')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('73')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('74')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('75')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('76')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('77')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('78')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('79')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('80')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('81')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('82')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('83')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('84')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mINSERT INTO `schema_migrations` (version) VALUES ('85')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mINSERT INTO `schema_migrations` (version) VALUES ('86')[0m
  [4;36;1mCountry Columns (11.0ms)[0m   [0;1mSHOW FIELDS FROM `countries`[0m
  [4;35;1mSQL (10.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCountry Load (1.0ms)[0m   [0;1mSELECT `countries`.id FROM `countries` WHERE (`countries`.`name` = BINARY ' ') LIMIT 1[0m
  [4;35;1mCountry Load (1.0ms)[0m   [0mSELECT * FROM `countries` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mCountry Create (0.0ms)[0m   [0;1mINSERT INTO `countries` (`name`, `position`, `created_at`, `updated_at`, `active`) VALUES(' ', 1, '2019-04-03 13:51:20', '2019-04-03 13:51:20', 1)[0m
  [4;35;1mSQL (2.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mCreditcard Columns (6.0ms)[0m   [0;1mSHOW FIELDS FROM `creditcards`[0m
  [4;35;1mSQL (10.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCreditcard Load (0.0ms)[0m   [0;1mSELECT `creditcards`.id FROM `creditcards` WHERE (`creditcards`.`name` = BINARY 'cash') LIMIT 1[0m
  [4;35;1mCreditcard Load (1.0ms)[0m   [0mSELECT * FROM `creditcards` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mCreditcard Create (1.0ms)[0m   [0;1mINSERT INTO `creditcards` (`name`, `validate_cc_number`, `position`, `validate_expiration`, `is_credit_card`, `use_expiration`, `active`) VALUES('cash', 0, 1, 0, 1, 0, 1)[0m
  [4;35;1mSQL (2.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mDiscount Columns (6.0ms)[0m   [0;1mSHOW FIELDS FROM `discounts`[0m
  [4;35;1mSQL (9.0ms)[0m   [0mBEGIN[0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT `discounts`.id FROM `discounts` WHERE (`discounts`.`name` = BINARY 'none') LIMIT 1[0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mDiscount Create (0.0ms)[0m   [0;1mINSERT INTO `discounts` (`name`, `discount_percent`, `position`, `disc_appl_month`, `disc_appl_seasonal`, `amount`, `disc_appl_daily`, `amount_monthly`, `amount_daily`, `disc_appl_week`, `amount_weekly`, `active`) VALUES('none', 0.0, 1, 0, 0, 0.0, 1, 0.0, 0.0, 0, 0.0, 1)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mRigtype Columns (6.0ms)[0m   [0;1mSHOW FIELDS FROM `rigtypes`[0m
  [4;35;1mSQL (11.0ms)[0m   [0mBEGIN[0m
  [4;36;1mRigtype Load (0.0ms)[0m   [0;1mSELECT `rigtypes`.id FROM `rigtypes` WHERE (`rigtypes`.`name` = BINARY 'other') LIMIT 1[0m
  [4;35;1mRigtype Load (0.0ms)[0m   [0mSELECT * FROM `rigtypes` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mRigtype Create (0.0ms)[0m   [0;1mINSERT INTO `rigtypes` (`name`, `position`, `active`) VALUES('other', 1, 1)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mOption Columns (9.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mOption Create (1.0ms)[0m   [0;1mINSERT INTO `options` (`all_onetime_discount`, `use_discount`, `use_length`, `require_phone`, `remote_discount`, `margin_left`, `require_city`, `use_onetime_discount`, `unit`, `margin_bottom`, `separator`, `cookie_token`, `require_country`, `use_id`, `all_payments_rpt`, `css`, `map`, `require_id`, `use_override`, `use_adults`, `use_remote_res_reject`, `use_remote_reservations`, `use_country`, `use_update`, `all_arrival_rpt`, `require_state`, `print`, `use_closed`, `match_firstname`, `use_storage`, `use_remote_rig_type`, `rates_decimal`, `use_recommend`, `all_checkin_rpt`, `use_confirm_email`, `season_end`, `all_manage_backup`, `checkout_time`, `locale`, `use_map`, `header`, `all_manage_payments`, `use_autologin`, `all_troubleshoot`, `use_seasonal`, `allow_gateway`, `all_recommend_rpt`, `use_checkout_time`, `closed_start`, `use_slides`, `delimiter`, `disp_rows`, `l_require_phone`, `all_in_park_rpt`, `l_require_country`, `auto_checkin_remote`, `use_remote_map`, `sa_columns`, `js`, `use_pets`, `express`, `require_first`, `trailer`, `l_require_addr`, `remote_css`, `use_variable_charge`, `all_campers_rpt`, `l_require_mailcode`, `use_remote_sitetype`, `require_email`, `remote_map`, `current_version`, `all_departure_rpt`, `tabs`, `l_require_state`, `use_envelope`, `require_gateway`, `remote_auto_accept`, `deposit`, `ftp_server`, `use_remote_length`, `season_start`, `ftp_passwd`, `use_rig_type`, `all_reservations_rpt`, `list_payments`, `use_remote_children`, `override_by_all`, `archive_list_sort`, `use_cc_fee`, `use_remote_adults`, `no_phones`, `inpark_list_sort`, `remote_recommendations`, `date_format`, `variable_rates`, `all_card_transactions_rpt`, `edit_archives`, `use_links`, `all_occupancy_rpt`, `show_remote_available`, `use_license`, `all_measured_rpt`, `find_by_id`, `remote_js`, `use_remote_age`, `l_require_city`, `l_require_email`, `all_leave_rpt`, `all_edit_archives`, `use_ssl`, `require_mailcode`, `use_login`, `use_addl`, `match_city`, `show_available`, `all_updates`, `current_revision`, `all_backup`, `use_feedback`, `no_vehicles`, `all_space_sum_rpt`, `inline_subtotal`, `disp_site_length`, `require_addr`, `l_require_id`, `use_children`, `disp_remote_length`, `max_spacename`, `closed_end`, `l_require_first`, `all_manage_measured`, `res_list_sort`, `margin_top`, `use_reserve_by_wk`, `session_token`, `use_remote_pets`, `use_remote_slides`, `all_transactions_rpt`, `lookback`, `use_remote_res_email`, `use_2nd_address`, `all_archives`, `ftp_account`, `home`, `use_remote_res_confirm`, `all_manage_variable`, `use_rig_age`, `all_manage_logs`, `keep_reservations`, `deposit_type`) VALUES(0, 1, 1, 0, 0, '0.56in', 0, 0, '$', '0.5in', '.', NULL, 0, 0, 0, NULL, NULL, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, '2012-12-31', 0, NULL, 'en', 0, NULL, 0, 0, 0, 0, 0, 0, 0, NULL, 1, ',', 12, 0, 1, 0, 0, 0, 120, NULL, 1, 0, 0, NULL, 0, NULL, 0, 0, 0, 1, 0, NULL, '1.11', 1, 0, 0, 0, 1, 0, 0.0, 'ocsrv.net', 1, '2012-01-01', 'opencampground', 1, 0, 0, 1, 0, 'id', 1, 1, 1, 'unconfirmed_remote desc, enddate, startdate, group_id, spaces.position asc', 0, NULL, 0, 0, 1, 0, 0, 1, 0, 0, 0, NULL, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, '1750', 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 3, NULL, 0, 0, 'unconfirmed_remote desc, startdate, group_id, spaces.position asc', '0.5in', 0, NULL, 1, 1, 0, 7, 1, 0, 0, 'anonymous', NULL, 1, 1, 1, 0, 13, 0)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSitetype Columns (7.0ms)[0m   [0;1mSHOW FIELDS FROM `sitetypes`[0m
  [4;35;1mSQL (10.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT `sitetypes`.id FROM `sitetypes` WHERE (`sitetypes`.`name` = BINARY 'basic') LIMIT 1[0m
  [4;35;1mSitetype Load (1.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mSitetype Create (1.0ms)[0m   [0;1mINSERT INTO `sitetypes` (`name`, `position`, `active`) VALUES('basic', 1, 1)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSeason Columns (7.0ms)[0m   [0;1mSHOW FIELDS FROM `seasons`[0m
  [4;35;1mSQL (13.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT `seasons`.id FROM `seasons` WHERE (`seasons`.`name` = BINARY 'default') LIMIT 1[0m
  [4;35;1mSeason Create (0.0ms)[0m   [0mINSERT INTO `seasons` (`name`, `enddate`, `applies_to_weekly`, `startdate`, `applies_to_monthly`, `active`) VALUES('default', '2100-01-01', 1, '2000-01-01', 1, 1)[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mUser Columns (9.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mSQL (10.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT `users`.id FROM `users` WHERE (`users`.`name` = BINARY 'manager') LIMIT 1[0m
  [4;36;1mUser Create (0.0ms)[0m   [0;1mINSERT INTO `users` (`name`, `salt`, `created_at`, `remember_me`, `updated_at`, `hashed_password`, `admin`, `remember_token`, `remember_token_expires`) VALUES('manager', '712783500.74635512257052', '2019-04-03 13:51:20', 0, '2019-04-03 13:51:20', 'c8ec0787f0f124c54102c849917db506ce66adc1', 1, NULL, NULL)[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mRecommender Columns (8.0ms)[0m   [0;1mSHOW FIELDS FROM `recommenders`[0m
  [4;35;1mSQL (8.0ms)[0m   [0mBEGIN[0m
  [4;36;1mRecommender Load (0.0ms)[0m   [0;1mSELECT `recommenders`.id FROM `recommenders` WHERE (`recommenders`.`name` = BINARY 'none') LIMIT 1[0m
  [4;35;1mRecommender Load (0.0ms)[0m   [0mSELECT * FROM `recommenders` WHERE (1 = 1) ORDER BY position DESC, position LIMIT 1[0m
  [4;36;1mRecommender Create (0.0ms)[0m   [0;1mINSERT INTO `recommenders` (`name`, `position`, `created_at`, `updated_at`, `active`) VALUES('none', 1, '2019-04-03 13:51:21', '2019-04-03 13:51:21', 1)[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSmtpAuthentication Columns (11.0ms)[0m   [0;1mSHOW FIELDS FROM `smtp_authentications`[0m
  [4;35;1mSQL (13.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSmtpAuthentication Create (0.0ms)[0m   [0;1mINSERT INTO `smtp_authentications` (`name`) VALUES('none')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSmtpAuthentication Create (0.0ms)[0m   [0mINSERT INTO `smtp_authentications` (`name`) VALUES('plain')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSmtpAuthentication Create (0.0ms)[0m   [0;1mINSERT INTO `smtp_authentications` (`name`) VALUES('login')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSmtpAuthentication Create (0.0ms)[0m   [0mINSERT INTO `smtp_authentications` (`name`) VALUES('cram_md5')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mMailTemplate Columns (8.0ms)[0m   [0mSHOW FIELDS FROM `mail_templates`[0m
  [4;36;1mSQL (12.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mMailTemplate Create (1.0ms)[0m   [0mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('reservation_confirmation', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nThank you for making a reservation at My RV Park. You are scheduled to arrive on {{start}} and depart on {{departure}}. We have assigned you site {{space_name}}. The total charges are estimated at {{charges}}. Your reservation confirmation number is {{number}}.\n\nWe look forward to serving you\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mMailTemplate Create (0.0ms)[0m   [0;1mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('reservation_update', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nYour reservation at My RV Park has been updated. You are now scheduled to arrive on {{start}} and depart on {{departure}}. We have assigned you site {{space_name}}. The total charges are estimated at {{charges}}. Your reservation confirmation number is {{number}}.\n\nWe look forward to serving you\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mMailTemplate Create (1.0ms)[0m   [0mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('reservation_feedback', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nThank you for staying at My RV Park.\n\nPlease reply to this message and tell us how you enjoyed your stay and if there is anything we could do to make your next stay with us more enjoyable.\n\nWe enjoyed having your company\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mMailTemplate Create (0.0ms)[0m   [0;1mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('remote_reservation_received', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nThank you for making a reservation at My RV Park. Your reservation will be reviewed by the management and you will sent a confirmation. \n\nWe look forward to serving you\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mMailTemplate Create (0.0ms)[0m   [0mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('remote_reservation_confirmation', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nThank you for making a reservation at My RV Park. You are scheduled to arrive on {{start}} and depart on {{departure}}. We have assigned you site {{space_name}}. The total charges are estimated at {{charges}}. Your reservation confirmation number is {{number}}. \n\nWe look forward to serving you\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mMailTemplate Create (1.0ms)[0m   [0;1mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('remote_reservation_reject', '2019-04-03 13:51:21', 'Dear {{camper}},\n\nYour reservation for arrival on {{start}} and departure on {{departure}} has not been confirmed. Please call us at (111) 555-1212 to resolve the problems. \n\nWe look forward to serving you\nTy Coon\nManager', '2019-04-03 13:51:21')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mMailTemplate Create (0.0ms)[0m   [0mINSERT INTO `mail_templates` (`name`, `created_at`, `body`, `updated_at`) VALUES('tst', '2019-04-03 13:51:21', 'This is a test message', '2019-04-03 13:51:21')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPrompt Columns (7.0ms)[0m   [0mSHOW FIELDS FROM `prompts`[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPrompt Create (1.0ms)[0m   [0mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'This page is your reservation confirmation. Print it on a printer or to a file for your records.', '2019-04-03 13:51:21', 'confirmation', 'en')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPrompt Create (0.0ms)[0m   [0;1mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'On this page are listed all of the sites that are available on the dates you selected.\n \n			 The EWS column indicates whether the sites have Electricity, Water and Sewer and for those having Electricity the amp capacity.\n			 The size column indicates the size in the common measure of the locale (normally feet or meters depending on the locale).\n			 Daily, Weekly and Monthly columns give the Daily, Weekly and Monthly rate for the space. \n			 If there is no amount indicated the space does not have a rate for that period.\n			 Type is the space type which was selected on the previous page.\n			 The Special column contains information that may help you in deciding whether or not you would like the site.\n			 <p>\n			 When you find the site you want just click on the <span style=\"text-decoration: underline\">Select</span> link to the right of that site.\n			 You will have an opportunity to change your selection on a following page if you change your mind.', '2019-04-03 13:51:21', 'find_space', 'en')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPrompt Create (1.0ms)[0m   [0mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'Using this series of web pages you can make your own reservations. Just enter into the fields the information on your party. \n			 The most important piece of information is the dates you want.\n			 When you have entered the requested information, pressing the \'Find Space\' button will cause the system to find spaces which are\n			 available on the dates indicated. At any time you can terminate the process with the \'Cancel\' button.', '2019-04-03 13:51:21', 'index', 'en')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPrompt Create (0.0ms)[0m   [0;1mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'This is your last chance to change things before you confirm your reservation pay for your stay. \n			 Any fields that are boxed can be modified by selecting them and typing the new data.\n			 To change date or space select the buttons so labeled.\n			 <p> \n			 Select the <em>Complete Reservation</em> button to go to the page to pay for your stay. \n			 When your payment transaction is complete you will be checked in to your site if your reservation starts today.\n			 A confirmation page will be presented which you can print for your records.\n			 </p><p>\n			 <b>This display will only persist for 30 minutes. You must complete your reservation in that time</b>', '2019-04-03 13:51:21', 'show', 'en')[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPrompt Create (0.0ms)[0m   [0mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'This page is shown while we are waiting for PayPal to respond with a confirmation of the transaction.\n			 This usually only takes a few seconds.\n			 When the transaction is complete the confirmation page will be presented.', '2019-04-03 13:51:21', 'wait_for_confirm', 'en')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPrompt Create (0.0ms)[0m   [0;1mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'On this page enter your name etc. Any fields with a asterisk after the name of the field are required.\n			 You will not be able to proceed any further in the process until you have filled in the information required.', '2019-04-03 13:51:21', 'find_remote', 'en')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPrompt Create (0.0ms)[0m   [0mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'This page is your secure credit card gateway. Enter your credit card number, expiration date and security code as prompted then select \'Submit\'<p>If you will not be paying now select Finish Reservation.', '2019-04-03 13:51:21', 'CardConnect-a-payment', 'en')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPrompt Create (0.0ms)[0m   [0;1mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'Review the amount to be charged using PayPal and then select the PayPal Buy Now button. This button will take you to the PayPal secure payments page.<p>If you will not be paying now select Finish Reservation.', '2019-04-03 13:51:21', 'PayPal-a-payment', 'en')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPrompt Create (0.0ms)[0m   [0mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'This page is your secure credit card gateway. Enter your credit card number, expiration date and security code as prompted then select \'Submit\'', '2019-04-03 13:51:21', 'CardConnect-payment', 'en')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPrompt Create (0.0ms)[0m   [0;1mINSERT INTO `prompts` (`created_at`, `body`, `updated_at`, `display`, `locale`) VALUES('2019-04-03 13:51:21', 'Review the amount to be charged using PayPal and then select the PayPal Buy Now button. This button will take you to the PayPal secure payments page.', '2019-04-03 13:51:21', 'PayPal-payment', 'en')[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mColor Columns (7.0ms)[0m   [0;1mSHOW FIELDS FROM `colors`[0m
  [4;35;1mSQL (11.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'body') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('body', 'Black')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'body_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('body_background', 'WhiteSmoke')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'main') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('main', 'Black')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'main_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('main_background', 'WhiteSmoke')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'columns') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('columns', 'Black')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'columns_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('columns_background', 'LightSteelBlue')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'banner') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('banner', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'banner_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('banner_background', 'MediumSlateBlue')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'late') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('late', 'Black')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'late_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('late_background', 'Yellow')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'locale') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('locale', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'locale_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('locale_background', 'White')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'occupied') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('occupied', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'occupied_background') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('occupied_background', 'LimeGreen')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'overstay') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('overstay', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'overstay_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('overstay_background', 'LightGray')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'reserved') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('reserved', 'Black')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'reserved_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('reserved_background', 'LightSteelBlue')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'today') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('today', 'Red')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'today_background') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('today_background', 'Khaki')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'notice') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('notice', 'Green')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'notice_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('notice_background', 'Snow')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'error') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('error', 'Red')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (1.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'error_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('error_background', 'Snow')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'warning') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('warning', 'Yellow')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'warning_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('warning_background', 'Snow')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'user') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('user', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'unavailable') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('unavailable', 'Red')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'unconfirmed') LIMIT 1[0m
  [4;35;1mColor Create (1.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('unconfirmed', 'Blue')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'this_day') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('this_day', 'Red')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'link') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('link', 'Black')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'payment_due') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('payment_due', 'Red')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'ip_editor_field_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('ip_editor_field_background', 'White')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'hover') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('hover', 'LightGrey')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mColor Load (0.0ms)[0m   [0;1mSELECT `colors`.id FROM `colors` WHERE (`colors`.`name` = BINARY 'explain_background') LIMIT 1[0m
  [4;35;1mColor Create (0.0ms)[0m   [0mINSERT INTO `colors` (`name`, `value`) VALUES('explain_background', 'White')[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mVersion Columns (7.0ms)[0m   [0mSHOW FIELDS FROM `versions`[0m
  [4;36;1mSQL (11.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mVersion Create (0.0ms)[0m   [0mINSERT INTO `versions` (`revision`, `description`, `release`, `install_pending`) VALUES('1344', 'revision for release 1.11', '1.11', 1)[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
  [4;36;1mSQL (20.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m
  [4;36;1mOption Load (209.9ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mIntegration Load (50.1ms)[0m   [0mSELECT * FROM `integrations` LIMIT 1[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mOption Columns (60.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:51:06) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is false, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: not using login
  [4;35;1mSpace Load (55.3ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
Redirected to http://localhost:3000/setup/index
Completed in 277ms (DB: 56) | 302 Found [http://localhost/]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:51:06) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;35;1mOption Columns (12.9ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is false, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: not using login
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
Redirected to http://localhost:3000/setup/index
Completed in 193ms (DB: 15) | 302 Found [http://localhost/]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::IndexController#index (for 127.0.0.1 at 2021-12-12 11:51:06) [GET]
  Parameters: {"action"=>"index", "controller"=>"setup/index"}
Debug: index#index option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: index#index option: OS is Windows_NT
Debug: index#index is_remote?: false
  [4;36;1mOption Columns (13.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: index#index cookies_required:
Debug: index#index set_locale:
Debug: index#index set_locale: locale is en
Debug: index#index startup:
Debug: index#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: index#index display_control: browser is chrome
Debug: index#index set_current_user:
Debug: index#index login_from_cookie:
Debug: index#index login_from_cookie: use_login is false, local
Debug: index#index check_login:
Debug: index#index check_login: not in cookies_test
Debug: index#index check_login: not is_local?
Debug: index#index check_login: not using login
Debug: index#index authorize:
in authorized args are setup/index and index
Debug: index#index authorize: authorized
Rendering template within layouts/application
Rendering setup/index/index
Rendered setup/shared/_buttons (104.1ms)
  [4;35;1mGroup Columns (70.3ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (20.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 663ms (View: 431, DB: 105) | 200 OK [http://localhost/setup/index]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::IndexController#index (for 127.0.0.1 at 2021-12-12 11:51:07) [GET]
  Parameters: {"action"=>"index", "controller"=>"setup/index"}
Debug: index#index option:
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: index#index option: OS is Windows_NT
Debug: index#index is_remote?: false
  [4;36;1mOption Columns (14.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: index#index cookies_required:
Debug: index#index set_locale:
Debug: index#index set_locale: locale is en
Debug: index#index startup:
Debug: index#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: index#index display_control: browser is chrome
Debug: index#index set_current_user:
Debug: index#index login_from_cookie:
Debug: index#index login_from_cookie: use_login is false, local
Debug: index#index check_login:
Debug: index#index check_login: not in cookies_test
Debug: index#index check_login: not is_local?
Debug: index#index check_login: not using login
Debug: index#index authorize:
in authorized args are setup/index and index
Debug: index#index authorize: authorized
Rendering template within layouts/application
Rendering setup/index/index
Rendered setup/shared/_buttons (7.0ms)
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 186ms (View: 30, DB: 18) | 200 OK [http://localhost/setup/index]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::InitdbController#initdb (for 127.0.0.1 at 2021-12-12 11:51:12) [POST]
  Parameters: {"action"=>"initdb", "controller"=>"setup/initdb"}
Debug: initdb#initdb option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: initdb#initdb option: OS is Windows_NT
Debug: initdb#initdb is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: initdb#initdb cookies_required:
Debug: initdb#initdb set_locale:
Debug: initdb#initdb set_locale: locale is en
Debug: initdb#initdb startup:
Debug: initdb#initdb display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: initdb#initdb display_control: browser is chrome
Debug: initdb#initdb set_current_user:
Debug: initdb#initdb in initdb..........................................
Debug: initdb#initdb reloading
Debug: initdb#initdb reset done
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
Debug: initdb#initdb load done
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` [0m
  [4;35;1mSpace Load (11.2ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (1.9ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (42.9ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 1) [0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 5, weeks = 0, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 5
calculating for 5 days
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-07 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;35;1mCharge Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `charges`[0m
calculating for 2021-12-08 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-09 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-10 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-11 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (8.9ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-07', 0, 0.0, 2.0, 24.0, 48.0, 1, 0, 1, '2021-12-09')[0m
  [4;36;1mSQL (84.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (1.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 0.0, 3.0, 26.0, 78.0, 2, 0, 1, '2021-12-12')[0m
  [4;35;1mSQL (59.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 1) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1) [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 1) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 1) [0m
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1) [0m
  [4;35;1mVariableCharge Columns (34.3ms)[0m   [0mSHOW FIELDS FROM `variable_charges`[0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 1) [0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 1) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 151[0m
  [4;36;1mSQL (65.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 152[0m
  [4;35;1mSQL (43.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 5.99, 0, 1)[0m
  [4;36;1mSQL (35.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (1.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 6.25, 5, 1)[0m
  [4;36;1mSQL (35.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 1) ORDER BY name[0m
got 2 tax records
record 0 is 198
record 1 is 197
Debug: initdb#initdb total 126.0, tax_amount 12.24, res_id 1
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 12.24, `updated_at` = '2021-12-12 11:51:19', `total` = 126.0, `lock_version` = 2, `updated_on` = '2021-12-12 11:51:19'
 WHERE id = 1
 AND `lock_version` = 1
[0m
  [4;36;1mSQL (27.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 9) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 2) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 1, months = 0
  [4;36;1mSQL (0.6ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
Months 0, Weeks 1, Days 0
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 61.7142857142857, units = 1, count = 0.428571428571429
Discount#charge percent discount 15.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-06', 0, 0.0, 0.428571428571429, 144.0, 61.7142857142857, 1, 1, 2, '2021-12-09')[0m
  [4;35;1mSQL (35.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 4
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 90.2857142857143, units = 1, count = 0.571428571428571
Discount#charge percent discount 15.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 0.0, 0.571428571428571, 158.0, 90.2857142857143, 2, 1, 2, '2021-12-13')[0m
  [4;36;1mSQL (30.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 2) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 2) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 2) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 2) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 2) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 2) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 2) [0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 153[0m
  [4;36;1mSQL (38.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.9ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 154[0m
  [4;35;1mSQL (28.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 9) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 7.22, 0, 2)[0m
  [4;36;1mSQL (31.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 2)[0m
  [4;36;1mSQL (26.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 2) ORDER BY name[0m
got 2 tax records
record 0 is 200
record 1 is 199
Debug: initdb#initdb total 152.0, tax_amount 15.97, res_id 2
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 15.97, `updated_at` = '2021-12-12 11:51:20', `total` = 152.0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:20'
 WHERE id = 2
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (39.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 8) ORDER BY position[0m
  [4;36;1mPrice Load (0.3ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.8ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (0.3ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (0.2ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 3) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 1, months = 0
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
Months 0, Weeks 1, Days 0
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 82.2857142857143, units = 1, count = 0.571428571428571
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (1.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-05', 0, 0.0, 0.571428571428571, 144.0, 82.2857142857143, 1, 1, 3, '2021-12-09')[0m
  [4;36;1mSQL (36.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 3
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 67.7142857142857, units = 1, count = 0.428571428571429
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 0.0, 0.428571428571429, 158.0, 67.7142857142857, 2, 1, 3, '2021-12-12')[0m
  [4;36;1mSQL (36.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 3) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 3) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 3) [0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 3) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 3) [0m
  [4;36;1mVariableCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 3) [0m
  [4;35;1mTax Load (0.9ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 3) [0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.7ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 155[0m
  [4;36;1mSQL (31.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 156[0m
  [4;35;1mSQL (34.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 8) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (1.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 7.13, 0, 3)[0m
  [4;36;1mSQL (37.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (1.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 3)[0m
  [4;36;1mSQL (24.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 3) ORDER BY name[0m
got 2 tax records
record 0 is 202
record 1 is 201
Debug: initdb#initdb total 150.0, tax_amount 15.88, res_id 3
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 15.88, `updated_at` = '2021-12-12 11:51:20', `total` = 150.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:20'
 WHERE id = 3
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (36.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 11) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 4) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-22' and enddate >= '2021-11-22') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-22' and enddate >= '2021-11-22') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 3, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-22' and enddate >= '2021-11-22') ORDER BY startdate DESC[0m
Months 0, Weeks 3, Days 0
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-22' and enddate >= '2021-11-22') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-23' and enddate >= '2021-11-23') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-24' and enddate >= '2021-11-24') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-25' and enddate >= '2021-11-25') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-26' and enddate >= '2021-11-26') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-27' and enddate >= '2021-11-27') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-28' and enddate >= '2021-11-28') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-29' and enddate >= '2021-11-29') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-30' and enddate >= '2021-11-30') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-01' and enddate >= '2021-12-01') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-02' and enddate >= '2021-12-02') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-03' and enddate >= '2021-12-03') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 349.714285714286, units = 1, count = 2.42857142857143
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-11-22', 0, 0.0, 2.42857142857143, 144.0, 349.714285714286, 1, 1, 4, '2021-12-09')[0m
  [4;35;1mSQL (70.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.6ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 4
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 90.2857142857143, units = 1, count = 0.571428571428571
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 0.0, 0.571428571428571, 158.0, 90.2857142857143, 2, 1, 4, '2021-12-13')[0m
  [4;36;1mSQL (65.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 4) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 4) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 4) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 4) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 4) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 4) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 4) [0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 157[0m
  [4;36;1mSQL (58.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 158[0m
  [4;35;1mSQL (107.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 11) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.5ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.1ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 20.9, 0, 4)[0m
  [4;36;1mSQL (125.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (1.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 26.25, 21, 4)[0m
  [4;36;1mSQL (31.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 4) ORDER BY name[0m
got 2 tax records
record 0 is 204
record 1 is 203
Debug: initdb#initdb total 440.0, tax_amount 47.15, res_id 4
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (1.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 47.15, `updated_at` = '2021-12-12 11:51:21', `total` = 440.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:21'
 WHERE id = 4
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (39.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 12) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 5) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-11-12' and enddate >= '2021-11-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.8ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-12' and enddate >= '2021-11-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 5, weeks = 1, months = 1
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
monthly
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-12' and enddate >= '2021-11-12') ORDER BY startdate DESC[0m
days in month = 30
season = default, current_date = 2021-11-12, month = 11, months_end = 2021-12-12
date is 2021-11-12
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-12' and enddate >= '2021-11-12') ORDER BY startdate DESC[0m
days_in_stay = 1, nothing else changed
date is 2021-11-13
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-13' and enddate >= '2021-11-13') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-11-14
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-14' and enddate >= '2021-11-14') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2021-11-15
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-15' and enddate >= '2021-11-15') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2021-11-16
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-16' and enddate >= '2021-11-16') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2021-11-17
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-17' and enddate >= '2021-11-17') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2021-11-18
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-18' and enddate >= '2021-11-18') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2021-11-19
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-19' and enddate >= '2021-11-19') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2021-11-20
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-20' and enddate >= '2021-11-20') ORDER BY startdate DESC[0m
days_in_stay = 9, nothing else changed
date is 2021-11-21
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-21' and enddate >= '2021-11-21') ORDER BY startdate DESC[0m
days_in_stay = 10, nothing else changed
date is 2021-11-22
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-22' and enddate >= '2021-11-22') ORDER BY startdate DESC[0m
days_in_stay = 11, nothing else changed
date is 2021-11-23
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-23' and enddate >= '2021-11-23') ORDER BY startdate DESC[0m
days_in_stay = 12, nothing else changed
date is 2021-11-24
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-24' and enddate >= '2021-11-24') ORDER BY startdate DESC[0m
days_in_stay = 13, nothing else changed
date is 2021-11-25
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-25' and enddate >= '2021-11-25') ORDER BY startdate DESC[0m
days_in_stay = 14, nothing else changed
date is 2021-11-26
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-26' and enddate >= '2021-11-26') ORDER BY startdate DESC[0m
days_in_stay = 15, nothing else changed
date is 2021-11-27
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-27' and enddate >= '2021-11-27') ORDER BY startdate DESC[0m
days_in_stay = 16, nothing else changed
date is 2021-11-28
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-28' and enddate >= '2021-11-28') ORDER BY startdate DESC[0m
days_in_stay = 17, nothing else changed
date is 2021-11-29
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-29' and enddate >= '2021-11-29') ORDER BY startdate DESC[0m
days_in_stay = 18, nothing else changed
date is 2021-11-30
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-11-30' and enddate >= '2021-11-30') ORDER BY startdate DESC[0m
days_in_stay = 19, nothing else changed
date is 2021-12-01
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-01' and enddate >= '2021-12-01') ORDER BY startdate DESC[0m
days_in_stay = 19, something changed
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 364.8, units = 2, count = 19/30
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-01' and enddate >= '2021-12-01') ORDER BY startdate DESC[0m
days in new month = 31
date is 2021-12-02
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-02' and enddate >= '2021-12-02') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-12-03
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-03' and enddate >= '2021-12-03') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2021-12-04
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2021-12-05
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2021-12-06
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2021-12-07
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2021-12-08
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2021-12-09
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
days_in_stay = 8, something changed
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 148.645161290323, units = 2, count = 8/31
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
days in new month = 31
date is 2021-12-10
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-12-11
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 61.3548387096774, units = 2, count = 3/31
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
(before) count of charges = 3
(after) count of charges = 2
dif = 0.0118279569892473
Discount#charge called with total = 68.8537634408602, units = 2, count = 0.0118279569892473
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
Discount#charge called with total = 513.445161290323, units = 2, count = 0.891397849462366
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (1.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-11-12', 0, 0.0, 0.891397849462366, 576.0, 513.445161290323, 1, 2, 5, '2021-12-09')[0m
  [4;35;1mSQL (45.2ms)[0m   [0mCOMMIT[0m
Discount#charge called with total = 68.8537634408602, units = 2, count = 0.108602150537634
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 0.0, 0.108602150537634, 634.0, 68.8537634408602, 2, 2, 5, '2021-12-12')[0m
  [4;36;1mSQL (32.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
Months 1, Weeks 1, Days 5
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 45.1428571428571, units = 1, count = 0.285714285714286
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-12', 0, 0.0, 0.285714285714286, 158.0, 45.1428571428571, 2, 1, 5, '2021-12-14')[0m
  [4;36;1mSQL (37.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 5
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 102.857142857143, units = 1, count = 0.714285714285714
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 0.714285714285714, 144.0, 102.857142857143, 1, 1, 5, '2021-12-19')[0m
  [4;36;1mSQL (25.4ms)[0m   [0;1mCOMMIT[0m
calculating for 5 days
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-19 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-20 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-21 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-22 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-23 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-19', 0, 0.0, 5.0, 24.0, 120.0, 1, 0, 5, '2021-12-24')[0m
  [4;36;1mSQL (32.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 5) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 5) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 5) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 5) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 5) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 5) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 5) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 159[0m
  [4;36;1mSQL (64.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 160[0m
  [4;35;1mSQL (30.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 12) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 40.39, 0, 5)[0m
  [4;36;1mSQL (34.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 15.0, 12, 5)[0m
  [4;36;1mSQL (40.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 5) ORDER BY name[0m
got 2 tax records
record 0 is 206
record 1 is 205
Debug: initdb#initdb total 850.3, tax_amount 55.39, res_id 5
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 55.39, `updated_at` = '2021-12-12 11:51:21', `total` = 850.3, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:21'
 WHERE id = 5
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (26.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 36) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 2) [0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Rate id is 2 rate for season 1, price 2 is daily 20.0, weekly 0.0, monthly 0.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 6) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
days = 7, weeks = 0, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 7
calculating for 7 days
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
calculating for 2021-12-08 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-09 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 22.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.2
calculating for 2021-12-10 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-10' and enddate >= '2021-12-10') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 22.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.2
calculating for 2021-12-11 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-11' and enddate >= '2021-12-11') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 22.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.2
calculating for 2021-12-12 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 22.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.2
calculating for 2021-12-13 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 22.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.2
calculating for 2021-12-14 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (1.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-08', 0, 2.0, 1.0, 20.0, 20.0, 1, 0, 6, '2021-12-09')[0m
  [4;35;1mSQL (63.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 11.0, 5.0, 22.0, 110.0, 2, 0, 6, '2021-12-14')[0m
  [4;36;1mSQL (33.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 2.0, 1.0, 20.0, 20.0, 1, 0, 6, '2021-12-15')[0m
  [4;35;1mSQL (27.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 6) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 6) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 6) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 6) [0m
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 6) [0m
  [4;35;1mVariableCharge Load (1.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 6) [0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 6) [0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 161[0m
  [4;35;1mSQL (36.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 162[0m
  [4;36;1mSQL (26.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 36) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 6.41, 0, 6)[0m
  [4;35;1mSQL (38.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 6)[0m
  [4;35;1mSQL (37.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 6) ORDER BY name[0m
got 2 tax records
record 0 is 208
record 1 is 207
Debug: initdb#initdb total 135.0, tax_amount 15.16, res_id 6
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 15.16, `updated_at` = '2021-12-12 11:51:22', `total` = 135.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:22'
 WHERE id = 6
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (37.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 7) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 1, weeks = 0, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 1
calculating for 1 days
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-12 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-12', 0, 0.0, 1.0, 26.0, 26.0, 2, 0, 7, '2021-12-13')[0m
  [4;36;1mSQL (35.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 7) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 7) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 7) [0m
  [4;36;1mExtra Load (1.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
ExtraCharge::before_save - measured is false
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
Debug: initdb#initdb calculate_extras: Extra charges are 1.0
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 7) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 7) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 7) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 7) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 7) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 163[0m
  [4;36;1mSQL (36.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 164[0m
  [4;35;1mSQL (28.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 1.24, 0, 7)[0m
  [4;36;1mSQL (29.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 1.25, 1, 7)[0m
  [4;36;1mSQL (26.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mExtra Load (0.0ms)[0m   [0mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
tax is percent
charges are 1.0, rate is 4.75 and amount is 0.05
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 0.05, 0, 7)[0m
  [4;35;1mSQL (71.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 7) ORDER BY name[0m
got 3 tax records
record 0 is 210
record 1 is 209
record 2 is 211
combine 211 with 209
amounts are 0.05 and 1.24
amount is now 1.29
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Update (0.0ms)[0m   [0mUPDATE `taxes` SET `amount` = 1.29 WHERE `id` = 211[0m
  [4;36;1mSQL (31.6ms)[0m   [0;1mCOMMIT[0m
now destroying 209
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.1ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 209[0m
  [4;35;1mSQL (34.1ms)[0m   [0mCOMMIT[0m
Debug: initdb#initdb total 27.0, tax_amount 2.54, res_id 7
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 2.54, `updated_at` = '2021-12-12 11:51:22', `total` = 27.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:22'
 WHERE id = 7
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (70.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 13) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 8) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 1, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
Months 0, Weeks 1, Days 0
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 45.1428571428571, units = 1, count = 0.285714285714286
Discount#charge percent discount 15.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.4ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-12', 0, 0.0, 0.285714285714286, 158.0, 45.1428571428571, 2, 1, 8, '2021-12-14')[0m
  [4;36;1mSQL (37.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.3ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.4ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 5
  [4;35;1mRate Load (0.2ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 102.857142857143, units = 1, count = 0.714285714285714
Discount#charge percent discount 15.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.5ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 0.714285714285714, 144.0, 102.857142857143, 1, 1, 8, '2021-12-19')[0m
  [4;36;1mSQL (28.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 8) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 8) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 8) [0m
  [4;36;1mExtra Load (1.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
ExtraCharge::before_save - measured is false
  [4;36;1mSQL (1.1ms)[0m   [0;1mCOMMIT[0m
Debug: initdb#initdb calculate_extras: Extra charges are 6.0
  [4;35;1mReservation Load (0.2ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 8) [0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 2) ORDER BY position[0m
  [4;35;1mSQL (0.9ms)[0m   [0mBEGIN[0m
ExtraCharge::before_save - measured is false
  [4;36;1mSQL (0.6ms)[0m   [0;1mCOMMIT[0m
Debug: initdb#initdb calculate_extras: Extra charges are 11.0
  [4;35;1mReservation Load (0.1ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 8) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 8) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 8) [0m
  [4;36;1mVariableCharge Load (1.1ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 8) [0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 8) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 165[0m
  [4;36;1mSQL (38.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 166[0m
  [4;35;1mSQL (27.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 13) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 7.03, 0, 8)[0m
  [4;36;1mSQL (39.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 8)[0m
  [4;36;1mSQL (35.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mExtra Load (0.0ms)[0m   [0mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
tax is percent
charges are 6.0, rate is 4.75 and amount is 0.29
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 0.29, 0, 8)[0m
  [4;35;1mSQL (36.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`extras_taxrates`.extra_id = 2 ) ORDER BY position LIMIT 1[0m
tax is percent
charges are 5.0, rate is 4.75 and amount is 0.24
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (1.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 0.24, 0, 8)[0m
  [4;36;1mSQL (32.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`extras_taxrates`.extra_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 8) ORDER BY name[0m
got 4 tax records
record 0 is 213
record 1 is 212
record 2 is 214
combine 214 with 212
amounts are 0.29 and 7.03
amount is now 7.32
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Update (0.0ms)[0m   [0mUPDATE `taxes` SET `amount` = 7.32 WHERE `id` = 214[0m
  [4;36;1mSQL (39.4ms)[0m   [0;1mCOMMIT[0m
now destroying 212
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 212[0m
  [4;35;1mSQL (28.7ms)[0m   [0mCOMMIT[0m
record 3 is 215
combine 215 with 214
amounts are 0.24 and 7.32
amount is now 7.56
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Update (0.0ms)[0m   [0mUPDATE `taxes` SET `amount` = 7.56 WHERE `id` = 215[0m
  [4;36;1mSQL (31.3ms)[0m   [0;1mCOMMIT[0m
now destroying 214
  [4;35;1mSQL (0.2ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.7ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 214[0m
  [4;35;1mSQL (28.4ms)[0m   [0mCOMMIT[0m
Debug: initdb#initdb total 159.0, tax_amount 16.31, res_id 8
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 16.31, `updated_at` = '2021-12-12 11:51:23', `total` = 159.0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:23'
 WHERE id = 8
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (31.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 16) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 9) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 1, weeks = 0, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 1
calculating for 1 days
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-12 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.6
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-12', 0, 2.6, 1.0, 26.0, 26.0, 2, 0, 9, '2021-12-13')[0m
  [4;35;1mSQL (29.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 9) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 9) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 9) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 9) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 9) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 9) [0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 9) [0m
  [4;35;1mSQL (0.3ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 167[0m
  [4;35;1mSQL (38.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 168[0m
  [4;36;1mSQL (28.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 16) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 1.11, 0, 9)[0m
  [4;35;1mSQL (37.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 1.25, 1, 9)[0m
  [4;35;1mSQL (28.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 9) ORDER BY name[0m
got 2 tax records
record 0 is 217
record 1 is 216
Debug: initdb#initdb total 23.4, tax_amount 2.36, res_id 9
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (1.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 2.36, `updated_at` = '2021-12-12 11:51:23', `total` = 23.4, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:23'
 WHERE id = 9
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (266.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 15) ORDER BY position[0m
  [4;35;1mPrice Load (1.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 10) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 0, months = 1
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
monthly
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
days in month = 31
season = Holiday, current_date = 2021-12-12, month = 12, months_end = 2022-01-12
date is 2021-12-12
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-12' and enddate >= '2021-12-12') ORDER BY startdate DESC[0m
days_in_stay = 1, nothing else changed
date is 2021-12-13
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-12-14
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
days_in_stay = 2, something changed
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 40.9032258064516, units = 2, count = 2/31
Discount#charge percent discount 10.0
Discount#charge amount is 4.09032258064516
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
days in new month = 31
date is 2021-12-15
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-12-16
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2021-12-17
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2021-12-18
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2021-12-19
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2021-12-20
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2021-12-21
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2021-12-22
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
days_in_stay = 9, nothing else changed
date is 2021-12-23
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
days_in_stay = 10, nothing else changed
date is 2021-12-24
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-24' and enddate >= '2021-12-24') ORDER BY startdate DESC[0m
days_in_stay = 11, nothing else changed
date is 2021-12-25
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-25' and enddate >= '2021-12-25') ORDER BY startdate DESC[0m
days_in_stay = 12, nothing else changed
date is 2021-12-26
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-26' and enddate >= '2021-12-26') ORDER BY startdate DESC[0m
days_in_stay = 13, nothing else changed
date is 2021-12-27
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-27' and enddate >= '2021-12-27') ORDER BY startdate DESC[0m
days_in_stay = 14, nothing else changed
date is 2021-12-28
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-28' and enddate >= '2021-12-28') ORDER BY startdate DESC[0m
days_in_stay = 15, nothing else changed
date is 2021-12-29
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-29' and enddate >= '2021-12-29') ORDER BY startdate DESC[0m
days_in_stay = 16, nothing else changed
date is 2021-12-30
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-30' and enddate >= '2021-12-30') ORDER BY startdate DESC[0m
days_in_stay = 17, nothing else changed
date is 2021-12-31
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-31' and enddate >= '2021-12-31') ORDER BY startdate DESC[0m
days_in_stay = 18, nothing else changed
date is 2022-01-01
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-01' and enddate >= '2022-01-01') ORDER BY startdate DESC[0m
days_in_stay = 18, something changed
  [4;36;1mRate Load (0.4ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 334.451612903226, units = 2, count = 18/31
Discount#charge percent discount 10.0
Discount#charge amount is 33.4451612903226
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-01' and enddate >= '2022-01-01') ORDER BY startdate DESC[0m
days in new month = 31
date is 2022-01-02
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-02' and enddate >= '2022-01-02') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2022-01-03
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-03' and enddate >= '2022-01-03') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2022-01-04
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-04' and enddate >= '2022-01-04') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2022-01-05
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-05' and enddate >= '2022-01-05') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2022-01-06
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-06' and enddate >= '2022-01-06') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2022-01-07
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-07' and enddate >= '2022-01-07') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2022-01-08
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-08' and enddate >= '2022-01-08') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2022-01-09
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-09' and enddate >= '2022-01-09') ORDER BY startdate DESC[0m
days_in_stay = 9, nothing else changed
date is 2022-01-10
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-10' and enddate >= '2022-01-10') ORDER BY startdate DESC[0m
days_in_stay = 10, nothing else changed
date is 2022-01-11
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-11' and enddate >= '2022-01-11') ORDER BY startdate DESC[0m
days_in_stay = 11, nothing else changed
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 204.387096774194, units = 2, count = 11/31
Discount#charge percent discount 10.0
Discount#charge amount is 20.4387096774194
(before) count of charges = 3
(after) count of charges = 2
dif = 0.0
Discount#charge called with total = 538.83870967742, units = 2, count = 0.0
Discount#charge percent discount 10.0
Discount#charge amount is 53.883870967742
Discount#charge called with total = 40.9032258064516, units = 2, count = 0.0645161290322581
Discount#charge percent discount 10.0
Discount#charge amount is 4.09032258064516
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-12', 0, 4.09032258064516, 0.0645161290322581, 634.0, 40.9032258064516, 2, 2, 10, '2021-12-14')[0m
  [4;35;1mSQL (63.5ms)[0m   [0mCOMMIT[0m
Discount#charge called with total = 538.83870967742, units = 2, count = 0.935483870967742
Discount#charge percent discount 10.0
Discount#charge amount is 53.883870967742
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (1.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 53.883870967742, 0.935483870967742, 576.0, 538.83870967742, 1, 2, 10, '2022-01-12')[0m
  [4;36;1mSQL (34.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2022-01-12' and enddate >= '2022-01-12') ORDER BY startdate DESC[0m
Months 1, Weeks 0, Days 0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 10) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 10) [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 10) [0m
  [4;35;1mExtra Load (1.0ms)[0m   [0mSELECT * FROM `extras` WHERE (`extras`.`id` = 3) ORDER BY position[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
ExtraCharge::before_save - measured is true
siz is 0, prec is 2
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
Debug: initdb#initdb calculate_extras: Extra charges are 0.0
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 10) [0m
  [4;35;1mExtra Load (0.0ms)[0m   [0mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
ExtraCharge::before_save - measured is false
  [4;35;1mSQL (1.0ms)[0m   [0mCOMMIT[0m
Debug: initdb#initdb calculate_extras: Extra charges are 20.0
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 10) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 10) [0m
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 10) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 10) [0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 10) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 169[0m
  [4;35;1mSQL (35.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 15) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 24.78, 0, 10)[0m
  [4;36;1mSQL (37.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 3) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`extras_taxrates`.extra_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;36;1mExtra Load (0.9ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`id` = 1) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.1ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
tax is percent
charges are 20.0, rate is 4.75 and amount is 0.95
  [4;36;1mSQL (0.8ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.1ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 0.95, 0, 10)[0m
  [4;36;1mSQL (34.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`extras_taxrates`.extra_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `extras_taxrates` ON `taxrates`.id = `extras_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`extras_taxrates`.extra_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 10) ORDER BY name[0m
got 2 tax records
record 0 is 218
record 1 is 219
combine 219 with 218
amounts are 0.95 and 24.78
amount is now 25.73
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Update (0.0ms)[0m   [0mUPDATE `taxes` SET `amount` = 25.73 WHERE `id` = 219[0m
  [4;36;1mSQL (35.7ms)[0m   [0;1mCOMMIT[0m
now destroying 218
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 218[0m
  [4;35;1mSQL (28.7ms)[0m   [0mCOMMIT[0m
Debug: initdb#initdb total 541.77, tax_amount 25.73, res_id 10
  [4;36;1mSQL (0.4ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (1.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 25.73, `updated_at` = '2021-12-12 11:51:24', `total` = 541.77, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:24'
 WHERE id = 10
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (30.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 11) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 11) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 1, weeks = 0, months = 0
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 1
calculating for 1 days
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-13 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.5ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-13', 0, 0.0, 1.0, 26.0, 26.0, 2, 0, 11, '2021-12-14')[0m
  [4;35;1mSQL (29.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 11) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 11) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 11) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 11) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 11) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 11) [0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 11) [0m
  [4;35;1mSQL (0.3ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 170[0m
  [4;35;1mSQL (38.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (1.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 171[0m
  [4;36;1mSQL (28.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 11) ORDER BY position[0m
  [4;35;1mSitetype Load (1.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 1.24, 0, 11)[0m
  [4;35;1mSQL (73.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 1.25, 1, 11)[0m
  [4;35;1mSQL (61.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 11) ORDER BY name[0m
got 2 tax records
record 0 is 221
record 1 is 220
Debug: initdb#initdb total 26.0, tax_amount 2.49, res_id 11
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (1.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 2.49, `updated_at` = '2021-12-12 11:51:24', `total` = 26.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:24'
 WHERE id = 11
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (35.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 16) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 12) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 3, weeks = 0, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 3
calculating for 3 days
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-13 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.6
calculating for 2021-12-14 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-15 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-13', 0, 2.6, 1.0, 26.0, 26.0, 2, 0, 12, '2021-12-14')[0m
  [4;36;1mSQL (34.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.3ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 4.8, 2.0, 24.0, 48.0, 1, 0, 12, '2021-12-16')[0m
  [4;35;1mSQL (68.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 12) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 12) [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 12) [0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 12) [0m
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 12) [0m
  [4;35;1mVariableCharge Load (1.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 12) [0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 12) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 172[0m
  [4;35;1mSQL (40.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 173[0m
  [4;36;1mSQL (33.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 16) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 3.16, 0, 12)[0m
  [4;35;1mSQL (41.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 3.75, 3, 12)[0m
  [4;35;1mSQL (36.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 12) ORDER BY name[0m
got 2 tax records
record 0 is 223
record 1 is 222
Debug: initdb#initdb total 66.6, tax_amount 6.91, res_id 12
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 6.91, `updated_at` = '2021-12-12 11:51:25', `total` = 66.6, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:25'
 WHERE id = 12
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (30.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 17) ORDER BY position[0m
  [4;35;1mPrice Load (1.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 13) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
days = 4, weeks = 0, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 4
calculating for 4 days
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-13 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-14 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-15 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-16 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-13', 0, 0.0, 1.0, 26.0, 26.0, 2, 0, 13, '2021-12-14')[0m
  [4;36;1mSQL (63.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 3.0, 24.0, 72.0, 1, 0, 13, '2021-12-17')[0m
  [4;35;1mSQL (25.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 13) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 13) [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 13) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 13) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 13) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 13) [0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 13) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 174[0m
  [4;35;1mSQL (32.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 175[0m
  [4;36;1mSQL (27.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 17) ORDER BY position[0m
  [4;35;1mSitetype Load (1.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 4.66, 0, 13)[0m
  [4;35;1mSQL (36.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 5.0, 4, 13)[0m
  [4;35;1mSQL (35.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 13) ORDER BY name[0m
got 2 tax records
record 0 is 225
record 1 is 224
Debug: initdb#initdb total 98.0, tax_amount 9.66, res_id 13
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 9.66, `updated_at` = '2021-12-12 11:51:25', `total` = 98.0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:25'
 WHERE id = 13
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (30.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 20) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 14) [0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 0, weeks = 0, months = 1
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
monthly
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
days in month = 31
season = default, current_date = 2021-12-14, month = 12, months_end = 2022-01-14
date is 2021-12-14
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
days_in_stay = 1, nothing else changed
date is 2021-12-15
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2021-12-16
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2021-12-17
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2021-12-18
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2021-12-19
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2021-12-20
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2021-12-21
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2021-12-22
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
days_in_stay = 9, nothing else changed
date is 2021-12-23
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
days_in_stay = 10, nothing else changed
date is 2021-12-24
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-24' and enddate >= '2021-12-24') ORDER BY startdate DESC[0m
days_in_stay = 11, nothing else changed
date is 2021-12-25
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-25' and enddate >= '2021-12-25') ORDER BY startdate DESC[0m
days_in_stay = 12, nothing else changed
date is 2021-12-26
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-26' and enddate >= '2021-12-26') ORDER BY startdate DESC[0m
days_in_stay = 13, nothing else changed
date is 2021-12-27
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-27' and enddate >= '2021-12-27') ORDER BY startdate DESC[0m
days_in_stay = 14, nothing else changed
date is 2021-12-28
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-28' and enddate >= '2021-12-28') ORDER BY startdate DESC[0m
days_in_stay = 15, nothing else changed
date is 2021-12-29
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-29' and enddate >= '2021-12-29') ORDER BY startdate DESC[0m
days_in_stay = 16, nothing else changed
date is 2021-12-30
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-30' and enddate >= '2021-12-30') ORDER BY startdate DESC[0m
days_in_stay = 17, nothing else changed
date is 2021-12-31
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-31' and enddate >= '2021-12-31') ORDER BY startdate DESC[0m
days_in_stay = 18, nothing else changed
date is 2022-01-01
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-01' and enddate >= '2022-01-01') ORDER BY startdate DESC[0m
days_in_stay = 18, something changed
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 334.451612903226, units = 2, count = 18/31
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-01' and enddate >= '2022-01-01') ORDER BY startdate DESC[0m
days in new month = 31
date is 2022-01-02
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-02' and enddate >= '2022-01-02') ORDER BY startdate DESC[0m
days_in_stay = 2, nothing else changed
date is 2022-01-03
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-03' and enddate >= '2022-01-03') ORDER BY startdate DESC[0m
days_in_stay = 3, nothing else changed
date is 2022-01-04
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-04' and enddate >= '2022-01-04') ORDER BY startdate DESC[0m
days_in_stay = 4, nothing else changed
date is 2022-01-05
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-05' and enddate >= '2022-01-05') ORDER BY startdate DESC[0m
days_in_stay = 5, nothing else changed
date is 2022-01-06
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-06' and enddate >= '2022-01-06') ORDER BY startdate DESC[0m
days_in_stay = 6, nothing else changed
date is 2022-01-07
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-07' and enddate >= '2022-01-07') ORDER BY startdate DESC[0m
days_in_stay = 7, nothing else changed
date is 2022-01-08
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-08' and enddate >= '2022-01-08') ORDER BY startdate DESC[0m
days_in_stay = 8, nothing else changed
date is 2022-01-09
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-09' and enddate >= '2022-01-09') ORDER BY startdate DESC[0m
days_in_stay = 9, nothing else changed
date is 2022-01-10
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-10' and enddate >= '2022-01-10') ORDER BY startdate DESC[0m
days_in_stay = 10, nothing else changed
date is 2022-01-11
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-11' and enddate >= '2022-01-11') ORDER BY startdate DESC[0m
days_in_stay = 11, nothing else changed
date is 2022-01-12
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-12' and enddate >= '2022-01-12') ORDER BY startdate DESC[0m
days_in_stay = 12, nothing else changed
date is 2022-01-13
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2022-01-13' and enddate >= '2022-01-13') ORDER BY startdate DESC[0m
days_in_stay = 13, nothing else changed
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 241.548387096774, units = 2, count = 13/31
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
(before) count of charges = 2
even month 2021-12-14 to 2022-01-14
(after) count of charges = 1
Discount#charge called with total = 576.0, units = 2, count = 1.0
Discount#charge amount discount monthly 0.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 1.0, 576.0, 576.0, 1, 2, 14, '2022-01-14')[0m
  [4;35;1mSQL (67.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2022-01-14' and enddate >= '2022-01-14') ORDER BY startdate DESC[0m
Months 1, Weeks 0, Days 0
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 14) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 14) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 14) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 14) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 14) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 14) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 14) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 176[0m
  [4;36;1mSQL (59.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 20) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 27.36, 0, 14)[0m
  [4;35;1mSQL (71.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 14) ORDER BY name[0m
got 1 tax records
record 0 is 226
Debug: initdb#initdb total 576.0, tax_amount 27.36, res_id 14
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 27.36, `updated_at` = '2021-12-12 11:51:26', `total` = 576.0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:26'
 WHERE id = 14
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (64.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 34) ORDER BY position[0m
  [4;36;1mPrice Load (1.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 3) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 3) LIMIT 1[0m
Rate id is 3 rate for season 1, price 3 is daily 22.0, weekly 132.0, monthly 0.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 15) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 3) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 3) LIMIT 1[0m
days = 0, weeks = 1, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
Months 0, Weeks 1, Days 0
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 7
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 3) LIMIT 1[0m
Discount#charge called with total = 132.0, units = 1, count = 1.0
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 1.0, 132.0, 132.0, 1, 1, 15, '2021-12-21')[0m
  [4;36;1mSQL (47.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 15) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 15) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 15) [0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 15) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 15) [0m
  [4;36;1mVariableCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 15) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 15) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 177[0m
  [4;36;1mSQL (29.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 178[0m
  [4;35;1mSQL (32.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 34) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 6.27, 0, 15)[0m
  [4;36;1mSQL (40.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 15)[0m
  [4;36;1mSQL (35.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 15) ORDER BY name[0m
got 2 tax records
record 0 is 228
record 1 is 227
Debug: initdb#initdb total 132.0, tax_amount 15.02, res_id 15
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 36) ORDER BY position[0m
  [4;35;1mPrice Load (1.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 2) [0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Rate id is 2 rate for season 1, price 2 is daily 20.0, weekly 0.0, monthly 0.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 16) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
days = 10, weeks = 0, months = 0
  [4;35;1mSQL (1.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 10
calculating for 10 days
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
calculating for 2021-12-15 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-16 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-17 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-18 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-19 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-20 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-21 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-22 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-23 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-24 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-24' and enddate >= '2021-12-24') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-15', 0, 0.0, 10.0, 20.0, 200.0, 1, 0, 16, '2021-12-25')[0m
  [4;36;1mSQL (60.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 16) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 16) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 16) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 16) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 16) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 16) [0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 16) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 179[0m
  [4;36;1mSQL (83.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.9ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 180[0m
  [4;35;1mSQL (52.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 36) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 9.5, 0, 16)[0m
  [4;36;1mSQL (29.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 12.5, 10, 16)[0m
  [4;36;1mSQL (50.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.1ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 16) ORDER BY name[0m
got 2 tax records
record 0 is 230
record 1 is 229
Debug: initdb#initdb total 200.0, tax_amount 22.0, res_id 16
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (1.0ms)[0m   [0m UPDATE `reservations`
 SET `updated_at` = '2021-12-12 11:51:26', `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:26'
 WHERE id = 16
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (32.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 41) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 2) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 2) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Rate id is 2 rate for season 1, price 2 is daily 20.0, weekly 0.0, monthly 0.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 17) [0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
days = 7, weeks = 0, months = 0
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 7
calculating for 7 days
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
calculating for 2021-12-16 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-17 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-18 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-19 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-20 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-21 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
calculating for 2021-12-22 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 2) LIMIT 1[0m
Discount#charge called with total = 20.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-16', 0, 14.0, 7.0, 20.0, 140.0, 1, 0, 17, '2021-12-23')[0m
  [4;35;1mSQL (52.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 17) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 17) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 17) [0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 17) [0m
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 17) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 17) [0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 17) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 181[0m
  [4;35;1mSQL (42.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 182[0m
  [4;36;1mSQL (33.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 41) ORDER BY position[0m
  [4;35;1mSitetype Load (1.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (31.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 5.99, 0, 17)[0m
  [4;35;1mSQL (90.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (58.1ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 17)[0m
  [4;35;1mSQL (102.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 17) ORDER BY name[0m
got 2 tax records
record 0 is 232
record 1 is 231
Debug: initdb#initdb total 126.0, tax_amount 14.74, res_id 17
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `updated_at` = '2021-12-12 11:51:27', `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:27'
 WHERE id = 17
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (41.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 9) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 5) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 5) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 18) [0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 3, weeks = 0, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 3
calculating for 3 days
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-16 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 12.0
calculating for 2021-12-17 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 12.0
calculating for 2021-12-18 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 12.0
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-16', 0, 36.0, 3.0, 24.0, 72.0, 1, 0, 18, '2021-12-19')[0m
  [4;36;1mSQL (106.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 18) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 18) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 18) [0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 18) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 18) [0m
  [4;36;1mVariableCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 18) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 18) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 183[0m
  [4;36;1mSQL (37.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 184[0m
  [4;35;1mSQL (28.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 9) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 1.71, 0, 18)[0m
  [4;36;1mSQL (34.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 3.75, 3, 18)[0m
  [4;36;1mSQL (36.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 18) ORDER BY name[0m
got 2 tax records
record 0 is 234
record 1 is 233
Debug: initdb#initdb total 36.0, tax_amount 5.46, res_id 18
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 62) ORDER BY position[0m
  [4;35;1mPrice Load (1.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 5) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 4) ORDER BY position[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Rate id is 5 rate for season 1, price 5 is daily 25.0, weekly 150.0, monthly 600.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 19) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
days = 0, weeks = 2, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
Months 0, Weeks 2, Days 0
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-24' and enddate >= '2021-12-24') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-25' and enddate >= '2021-12-25') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-26' and enddate >= '2021-12-26') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-27' and enddate >= '2021-12-27') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-28' and enddate >= '2021-12-28') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-29' and enddate >= '2021-12-29') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-30' and enddate >= '2021-12-30') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-31' and enddate >= '2021-12-31') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2022-01-01' and enddate >= '2022-01-01') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 14
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 300.0, units = 1, count = 2.0
Discount#charge percent discount 15.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.4ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-19', 0, 0.0, 2.0, 150.0, 300.0, 1, 1, 19, '2022-01-02')[0m
  [4;36;1mSQL (62.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 19) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 19) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 19) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 19) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 19) [0m
  [4;36;1mVariableCharge Load (0.5ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 19) [0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 19) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 185[0m
  [4;36;1mSQL (87.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 186[0m
  [4;35;1mSQL (141.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 62) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 3) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 14.25, 0, 19)[0m
  [4;36;1mSQL (44.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 17.5, 14, 19)[0m
  [4;36;1mSQL (64.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 19) ORDER BY name[0m
got 2 tax records
record 0 is 236
record 1 is 235
Debug: initdb#initdb total 300.0, tax_amount 31.75, res_id 19
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `updated_at` = '2021-12-12 11:51:28', `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:28'
 WHERE id = 19
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (44.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 13) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 4) [0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Rate id is 4 rate for season 1, price 4 is daily 24.0, weekly 144.0, monthly 576.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 20) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
days = 6, weeks = 0, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 6
calculating for 6 days
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
calculating for 2021-12-04 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-04' and enddate >= '2021-12-04') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-05 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-05' and enddate >= '2021-12-05') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-06 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-06' and enddate >= '2021-12-06') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-07 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-07' and enddate >= '2021-12-07') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-08 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-08' and enddate >= '2021-12-08') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 24.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.4
calculating for 2021-12-09 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-09' and enddate >= '2021-12-09') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 4) LIMIT 1[0m
Discount#charge called with total = 26.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 2.6
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-04', 0, 12.0, 5.0, 24.0, 120.0, 1, 0, 20, '2021-12-09')[0m
  [4;35;1mSQL (54.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-09', 0, 2.6, 1.0, 26.0, 26.0, 2, 0, 20, '2021-12-10')[0m
  [4;36;1mSQL (24.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 20) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 20) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 20) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 20) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 20) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 20) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 20) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 187[0m
  [4;36;1mSQL (31.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 188[0m
  [4;35;1mSQL (27.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 13) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 6.24, 0, 20)[0m
  [4;36;1mSQL (31.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 7.5, 6, 20)[0m
  [4;36;1mSQL (42.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (1.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 20) ORDER BY name[0m
got 2 tax records
record 0 is 238
record 1 is 237
Debug: initdb#initdb total 131.4, tax_amount 13.74, res_id 20
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (1.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 13.74, `updated_at` = '2021-12-12 11:51:28', `length` = 0, `total` = 131.4, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:28'
 WHERE id = 20
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (31.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 90) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 1) [0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mOption Load (0.7ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Rate id is 1 rate for season 1, price 1 is daily 12.0, weekly 72.0, monthly 288.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 21) [0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 1) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 1) LIMIT 1[0m
days = 3, weeks = 0, months = 0
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 3
calculating for 3 days
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 1) LIMIT 1[0m
calculating for 2021-12-13 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 13.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.3
calculating for 2021-12-14 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
calculating for 2021-12-15 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-13', 0, 1.3, 1.0, 13.0, 13.0, 2, 0, 21, '2021-12-14')[0m
  [4;35;1mSQL (25.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 2.4, 2.0, 12.0, 24.0, 1, 0, 21, '2021-12-16')[0m
  [4;36;1mSQL (31.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 21) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 21) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 21) [0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 21) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 21) [0m
  [4;36;1mVariableCharge Load (1.1ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 21) [0m
  [4;35;1mTax Load (0.8ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 21) [0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.8ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 189[0m
  [4;36;1mSQL (35.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 190[0m
  [4;35;1mSQL (28.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 90) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 1) ORDER BY position[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 1.58, 0, 21)[0m
  [4;36;1mSQL (44.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 21) ORDER BY name[0m
got 1 tax records
record 0 is 239
Debug: initdb#initdb total 33.3, tax_amount 1.58, res_id 21
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 1.58, `updated_at` = '2021-12-12 11:51:29', `total` = 33.3, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:29'
 WHERE id = 21
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (37.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 91) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 1) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 5) ORDER BY position[0m
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 5) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Rate id is 1 rate for season 1, price 1 is daily 12.0, weekly 72.0, monthly 288.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 22) [0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
days = 3, weeks = 0, months = 0
  [4;35;1mSQL (1.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 3
calculating for 3 days
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
calculating for 2021-12-16 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 6.0
calculating for 2021-12-17 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 6.0
calculating for 2021-12-18 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 50.0
Discount#charge amount is 6.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (0.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-16', 0, 18.0, 3.0, 12.0, 36.0, 1, 0, 22, '2021-12-19')[0m
  [4;36;1mSQL (27.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 22) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 22) [0m
  [4;35;1mReservation Load (0.3ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 22) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 22) [0m
  [4;35;1mExtraCharge Load (0.2ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 22) [0m
  [4;36;1mVariableCharge Load (0.8ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 22) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 22) [0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.7ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 191[0m
  [4;36;1mSQL (37.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.8ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 192[0m
  [4;35;1mSQL (87.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 91) ORDER BY position[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 1) ORDER BY position[0m
  [4;35;1mTaxrate Load (1.2ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.1ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 0.86, 0, 22)[0m
  [4;36;1mSQL (89.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 22) ORDER BY name[0m
got 1 tax records
record 0 is 240
Debug: initdb#initdb total 18.0, tax_amount 0.86, res_id 22
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (1.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 0.86, `updated_at` = '2021-12-12 11:51:29', `lock_version` = 3, `updated_on` = '2021-12-12 11:51:29'
 WHERE id = 22
 AND `lock_version` = 2
[0m
  [4;35;1mSQL (52.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 62) ORDER BY position[0m
  [4;35;1mPrice Load (1.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 5) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Rate id is 5 rate for season 1, price 5 is daily 25.0, weekly 150.0, monthly 600.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 23) [0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 5) LIMIT 1[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 5) LIMIT 1[0m
days = 4, weeks = 0, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 4
calculating for 4 days
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 5) LIMIT 1[0m
calculating for 2021-12-13 
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-13' and enddate >= '2021-12-13') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 2 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 28.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-14 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 25.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-15 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 25.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
calculating for 2021-12-16 
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (1.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 25.0, units = 0, count = 1
Discount#charge amount discount daily 0.0
Discount#charge amount is 0.0
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mCharge Create (1.0ms)[0m   [0mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-13', 0, 0.0, 1.0, 28.0, 28.0, 2, 0, 23, '2021-12-14')[0m
  [4;36;1mSQL (70.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 3.0, 25.0, 75.0, 1, 0, 23, '2021-12-17')[0m
  [4;35;1mSQL (25.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 23) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 23) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 23) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 23) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 23) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 23) [0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 23) [0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 193[0m
  [4;35;1mSQL (30.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (1.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 194[0m
  [4;36;1mSQL (39.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (1.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 62) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 3) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (1.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 4.89, 0, 23)[0m
  [4;35;1mSQL (38.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 5.0, 4, 23)[0m
  [4;35;1mSQL (36.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 23) ORDER BY name[0m
got 2 tax records
record 0 is 242
record 1 is 241
Debug: initdb#initdb total 103.0, tax_amount 9.89, res_id 23
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mReservation Update with optimistic locking (0.0ms)[0m   [0;1m UPDATE `reservations`
 SET `tax_amount` = 9.89, `updated_at` = '2021-12-12 11:51:29', `total` = 103.0, `lock_version` = 4, `updated_on` = '2021-12-12 11:51:29'
 WHERE id = 23
 AND `lock_version` = 3
[0m
  [4;35;1mSQL (37.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 63) ORDER BY position[0m
  [4;35;1mPrice Load (0.0ms)[0m   [0mSELECT * FROM `prices` WHERE (`prices`.`id` = 5) [0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Rate id is 5 rate for season 1, price 5 is daily 25.0, weekly 150.0, monthly 600.0, seasonal 0.0, storage 0.0
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 24) [0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
days = 0, weeks = 1, months = 0
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
Months 0, Weeks 1, Days 0
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-14' and enddate >= '2021-12-14') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (1.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-15' and enddate >= '2021-12-15') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-16' and enddate >= '2021-12-16') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-17' and enddate >= '2021-12-17') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-18' and enddate >= '2021-12-18') ORDER BY startdate DESC[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-19' and enddate >= '2021-12-19') ORDER BY startdate DESC[0m
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
weeks overflow days_in_stay = 7
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 5) LIMIT 1[0m
Discount#charge called with total = 150.0, units = 1, count = 1.0
Discount#charge amount discount weekly 0.0
Discount#charge amount is 0.0
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-14', 0, 0.0, 1.0, 150.0, 150.0, 1, 1, 24, '2021-12-21')[0m
  [4;35;1mSQL (26.8ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 24) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 24) [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 24) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 24) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 24) [0m
  [4;35;1mVariableCharge Load (0.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 24) [0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 24) [0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Destroy (0.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 195[0m
  [4;35;1mSQL (36.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.8ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 196[0m
  [4;36;1mSQL (29.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 63) ORDER BY position[0m
  [4;35;1mSitetype Load (0.9ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 3) ORDER BY position[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 7.13, 0, 24)[0m
  [4;35;1mSQL (33.4ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (1.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 3 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.0ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 8.75, 7, 24)[0m
  [4;35;1mSQL (35.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 24) ORDER BY name[0m
got 2 tax records
record 0 is 244
record 1 is 243
Debug: initdb#initdb total 150.0, tax_amount 15.88, res_id 24
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 91) ORDER BY position[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` = 1) [0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (0.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 3) ORDER BY position[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Rate id is 1 rate for season 1, price 1 is daily 12.0, weekly 72.0, monthly 288.0, seasonal 0.0, storage 0.0
  [4;35;1mCharge Load (1.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 25) [0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.0ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_monthly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;35;1mRate Load (0.5ms)[0m   [0mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
days = 4, weeks = 0, months = 0
  [4;36;1mSQL (0.5ms)[0m   [0;1mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
2 seasons
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and applies_to_weekly = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
Months 0, Weeks 0, Days 4
calculating for 4 days
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
calculating for 2021-12-20 
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-20' and enddate >= '2021-12-20') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (1.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
calculating for 2021-12-21 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-21' and enddate >= '2021-12-21') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
calculating for 2021-12-22 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-22' and enddate >= '2021-12-22') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
calculating for 2021-12-23 
  [4;35;1mSeason Load (0.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (active = 1 and startdate <= '2021-12-23' and enddate >= '2021-12-23') ORDER BY startdate DESC[0m
  [4;36;1mRate Load (0.0ms)[0m   [0;1mSELECT * FROM `rates` WHERE (season_id = 1 and price_id = 1) LIMIT 1[0m
Discount#charge called with total = 12.0, units = 0, count = 1
Discount#charge percent discount 10.0
Discount#charge amount is 1.2
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mCharge Create (0.0ms)[0m   [0;1mINSERT INTO `charges` (`start_date`, `temp`, `discount`, `period`, `rate`, `amount`, `season_id`, `charge_units`, `reservation_id`, `end_date`) VALUES('2021-12-20', 0, 4.8, 4.0, 12.0, 48.0, 1, 0, 25, '2021-12-24')[0m
  [4;35;1mSQL (49.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (reservation_id = 25) ORDER BY start_date ASC[0m
Debug: initdb#initdb calculate_extras:
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 25) [0m
  [4;36;1mReservation Load (0.5ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 25) [0m
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 25) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 25) [0m
  [4;35;1mVariableCharge Load (1.0ms)[0m   [0mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 25) [0m
  [4;36;1mTax Load (1.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (reservation_id = 25) [0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 91) ORDER BY position[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 1) ORDER BY position[0m
  [4;36;1mTaxrate Load (0.7ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mTax Create (0.1ms)[0m   [0;1mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 2.05, 0, 25)[0m
  [4;35;1mSQL (32.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mTaxrate Load (0.0ms)[0m   [0;1mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 1 ) ORDER BY position LIMIT 1[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 25) ORDER BY name[0m
got 1 tax records
record 0 is 245
Debug: initdb#initdb total 43.2, tax_amount 2.05, res_id 25
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mReservation Update with optimistic locking (0.0ms)[0m   [0m UPDATE `reservations`
 SET `tax_amount` = 2.05, `updated_at` = '2021-12-12 11:51:30', `length` = 0, `rig_age` = 0, `lock_version` = 3, `updated_on` = '2021-12-12 11:51:30'
 WHERE id = 25
 AND `lock_version` = 2
[0m
  [4;36;1mSQL (35.7ms)[0m   [0;1mCOMMIT[0m
Redirected to http://localhost:3000/
Completed in 17434ms (DB: 12079) | 302 Found [http://localhost/setup/initdb/initdb]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:51:41) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (14.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is false, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: not using login
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (10.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (11.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (145.9ms)
Rendered shared/_list (7.0ms)
Rendered shared/_list (72.8ms)
Rendered shared/_list (3.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (0.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (1.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (22.9ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_reservations (383.9ms)
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 751ms (View: 489, DB: 53) | 200 OK [http://localhost/]
  [4;35;1mSQL (1.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing AdminController#index (for 127.0.0.1 at 2021-12-12 11:51:46) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin"}
Debug: admin#index option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: admin#index option: OS is Windows_NT
Debug: admin#index is_remote?: false
  [4;36;1mOption Columns (13.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: admin#index cookies_required:
Debug: admin#index set_locale:
Debug: admin#index set_locale: locale is en
Debug: admin#index startup:
Debug: admin#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: admin#index display_control: browser is chrome
Debug: admin#index set_current_user:
Debug: admin#index login_from_cookie:
Debug: admin#index login_from_cookie: use_login is false, local
Debug: admin#index check_login:
Debug: admin#index check_login: not in cookies_test
Debug: admin#index check_login: not is_local?
Debug: admin#index check_login: not using login
Rendering template within layouts/application
Rendering admin/index
  [4;35;1mGroup Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 317ms (View: 96, DB: 19) | 200 OK [http://localhost/admin]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::IndexController#index (for 127.0.0.1 at 2021-12-12 11:51:48) [GET]
  Parameters: {"action"=>"index", "controller"=>"setup/index"}
Debug: index#index option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: index#index option: OS is Windows_NT
Debug: index#index is_remote?: false
  [4;36;1mOption Columns (11.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: index#index cookies_required:
Debug: index#index set_locale:
Debug: index#index set_locale: locale is en
Debug: index#index startup:
Debug: index#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: index#index display_control: browser is chrome
Debug: index#index set_current_user:
Debug: index#index login_from_cookie:
Debug: index#index login_from_cookie: use_login is false, local
Debug: index#index check_login:
Debug: index#index check_login: not in cookies_test
Debug: index#index check_login: not is_local?
Debug: index#index check_login: not using login
Debug: index#index authorize:
in authorized args are setup/index and index
Debug: index#index authorize: authorized
Rendering template within layouts/application
Rendering setup/index/index
Rendered setup/shared/_buttons (5.0ms)
  [4;35;1mGroup Columns (9.8ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 195ms (View: 31, DB: 22) | 200 OK [http://localhost/setup/index]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::OptionController#edit (for 127.0.0.1 at 2021-12-12 11:51:50) [POST]
  Parameters: {"action"=>"edit", "controller"=>"setup/option"}
Debug: option#edit option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: option#edit option: OS is Windows_NT
Debug: option#edit is_remote?: false
  [4;36;1mOption Columns (31.3ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: option#edit cookies_required:
Debug: option#edit set_locale:
Debug: option#edit set_locale: locale is en
Debug: option#edit startup:
Debug: option#edit display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: option#edit display_control: browser is chrome
Debug: option#edit set_current_user:
Debug: option#edit login_from_cookie:
Debug: option#edit login_from_cookie: use_login is false, local
Debug: option#edit check_login:
Debug: option#edit check_login: not in cookies_test
Debug: option#edit check_login: not is_local?
Debug: option#edit check_login: not using login
Debug: option#edit authorize:
in authorized args are setup/option and edit
Debug: option#edit authorize: authorized
  [4;35;1mIntegration Load (0.0ms)[0m   [0mSELECT * FROM `integrations` LIMIT 1[0m
Rendering template within layouts/application
Rendering setup/option/edit
  [4;36;1mIntegration Columns (8.9ms)[0m   [0;1mSHOW FIELDS FROM `integrations`[0m
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 714ms (View: 445, DB: 45) | 200 OK [http://localhost/setup/option/edit]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::OptionController#update (for 127.0.0.1 at 2021-12-12 11:52:02) [POST]
  Parameters: {"option"=>{"all_onetime_discount"=>"0", "use_discount"=>"1", "use_length"=>"1", "require_phone"=>"0", "remote_discount"=>"0", "margin_left"=>"0.56in", "require_city"=>"0", "closed_end(2i)"=>"12", "use_onetime_discount"=>"0", "margin_bottom"=>"0.5in", "use_id"=>"0", "all_payments_rpt"=>"0", "checkout_time(1i)"=>"2021", "use_override"=>"0", "use_adults"=>"1", "use_remote_res_reject"=>"1", "use_remote_reservations"=>"1", "use_country"=>"0", "all_arrival_rpt"=>"1", "season_start(1i)"=>"2021", "season_end(1i)"=>"2021", "require_state"=>"0", "print"=>"0", "use_closed"=>"0", "match_firstname"=>"0", "use_storage"=>"0", "checkout_time(3i)"=>"12", "use_remote_rig_type"=>"1", "rates_decimal"=>"2", "use_recommend"=>"1", "all_checkin_rpt"=>"1", "use_confirm_email"=>"0", "season_start(3i)"=>"1", "season_end(3i)"=>"31", "all_manage_backup"=>"0", "locale"=>"en", "use_map"=>"0", "header"=>"", "all_manage_payments"=>"0", "checkout_time(5i)"=>"51", "use_autologin"=>"0", "all_troubleshoot"=>"0", "use_seasonal"=>"0", "all_recommend_rpt"=>"0", "use_checkout_time"=>"0", "use_slides"=>"1", "disp_rows"=>"12", "l_require_phone"=>"0", "all_in_park_rpt"=>"1", "closed_start(2i)"=>"12", "auto_checkin_remote"=>"0", "use_remote_map"=>"0", "sa_columns"=>"120", "use_pets"=>"1", "express"=>"0", "require_first"=>"0", "trailer"=>"", "l_require_addr"=>"0", "use_variable_charge"=>"0", "all_campers_rpt"=>"0", "l_require_mailcode"=>"0", "use_remote_sitetype"=>"1", "require_email"=>"0", "all_departure_rpt"=>"1", "tabs"=>"0", "l_require_state"=>"0", "use_envelope"=>"0", "remote_auto_accept"=>"0", "use_remote_length"=>"1", "closed_end(1i)"=>"2021", "use_rig_type"=>"1", "all_reservations_rpt"=>"0", "list_payments"=>"0", "use_remote_children"=>"1", "override_by_all"=>"0", "use_remote_adults"=>"1", "no_phones"=>"1", "closed_end(3i)"=>"12", "remote_recommendations"=>"0", "variable_rates"=>"0", "edit_archives"=>"1", "show_remote_available"=>"1", "all_occupancy_rpt"=>"0", "use_license"=>"0", "all_measured_rpt"=>"0", "find_by_id"=>"0", "checkout_time(2i)"=>"12", "use_remote_age"=>"1", "l_require_city"=>"0", "l_require_email"=>"0", "all_leave_rpt"=>"1", "all_edit_archives"=>"0", "season_start(2i)"=>"1", "season_end(2i)"=>"12", "use_login"=>"1", "require_mailcode"=>"0", "use_addl"=>"0", "checkout_time(4i)"=>"11", "show_available"=>"1", "match_city"=>"0", "all_updates"=>"0", "use_feedback"=>"0", "all_backup"=>"1", "closed_start(1i)"=>"2021", "require_addr"=>"0", "disp_site_length"=>"1", "inline_subtotal"=>"0", "all_space_sum_rpt"=>"1", "no_vehicles"=>"1", "disp_remote_length"=>"1", "use_children"=>"1", "l_require_first"=>"0", "closed_start(3i)"=>"12", "use_reserve_by_wk"=>"0", "margin_top"=>"0.5in", "all_manage_measured"=>"0", "use_remote_slides"=>"1", "use_remote_pets"=>"1", "lookback"=>"7", "use_remote_res_email"=>"1", "all_transactions_rpt"=>"0", "use_remote_res_confirm"=>"1", "all_archives"=>"0", "use_2nd_address"=>"0", "keep_reservations"=>"13", "all_manage_logs"=>"0", "use_rig_age"=>"1"}, "commit"=>"Save", "method"=>"post", "action"=>"update", "controller"=>"setup/option", "gateway"=>"require_gateway"}
Debug: option#update option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: option#update option: OS is Windows_NT
Debug: option#update is_remote?: false
  [4;36;1mOption Columns (69.3ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: option#update cookies_required:
Debug: option#update set_locale:
Debug: option#update set_locale: locale is en
Debug: option#update startup:
Debug: option#update display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: option#update display_control: browser is chrome
Debug: option#update set_current_user:
Debug: option#update login_from_cookie:
Debug: option#update login_from_cookie: use_login is false, local
Debug: option#update check_login:
Debug: option#update check_login: not in cookies_test
Debug: option#update check_login: not is_local?
Debug: option#update check_login: not using login
Debug: option#update authorize:
in authorized args are setup/option and update
Debug: option#update authorize: authorized
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mIntegration Load (1.0ms)[0m   [0;1mSELECT * FROM `integrations` LIMIT 1[0m
  [4;35;1mOption Update (0.0ms)[0m   [0mUPDATE `options` SET `closed_end` = '2021-12-12', `checkout_time` = '2021-12-12 11:51:00', `use_remote_reservations` = 1, `use_login` = 1, `header` = '', `trailer` = '', `closed_start` = '2021-12-12' WHERE `id` = 1[0m
  [4;36;1mSQL (53.3ms)[0m   [0;1mCOMMIT[0m
Redirected to http://localhost:3000/setup/index
Completed in 359ms (DB: 126) | 302 Found [http://localhost/setup/option/update?method=post]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Setup::IndexController#index (for 127.0.0.1 at 2021-12-12 11:52:02) [GET]
  Parameters: {"action"=>"index", "controller"=>"setup/index"}
Debug: index#index option:
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: index#index option: OS is Windows_NT
Debug: index#index is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: index#index cookies_required:
Debug: index#index set_locale:
Debug: index#index set_locale: locale is en
Debug: index#index startup:
Debug: index#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: index#index display_control: browser is chrome
Debug: index#index set_current_user:
Redirected to http://localhost:3000/login/login
Filter chain halted as [:set_current_user] rendered_or_redirected.
Completed in 133ms (DB: 12) | 302 Found [http://localhost/setup/index]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:52:03) [GET]
  Parameters: {"action"=>"login", "controller"=>"login"}
Debug: login#login option:
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (93.3ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
Rendering template within layouts/login
Rendering login/login
Completed in 335ms (View: 72, DB: 94) | 200 OK [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:52:08) [POST]
  Parameters: {"name"=>"manager", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (11.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;35;1mUser Columns (9.4ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`name` = 'manager') LIMIT 1[0m
Redirected to http://localhost:3000/
Completed in 153ms (DB: 22) | 302 Found [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:52:09) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (10.8ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (11.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (23.9ms)
Rendered shared/_list (3.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (6.0ms)
  [4;35;1mGroup Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (1.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (0.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (74.8ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_reservations (155.6ms)
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 478ms (View: 168, DB: 49) | 200 OK [http://localhost/]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 11:52:12) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;36;1mOption Columns (12.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;36;1mReservation Columns (6.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (0.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Columns (7.7ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
  [4;36;1mGroup Columns (9.8ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 1261ms (View: 919, DB: 62) | 200 OK [http://localhost/reservation/available]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing AdminController#index (for 127.0.0.1 at 2021-12-12 11:52:28) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin"}
Debug: admin#index option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: admin#index option: OS is Windows_NT
Debug: admin#index is_remote?: false
  [4;35;1mOption Columns (12.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: admin#index cookies_required:
Debug: admin#index set_locale:
Debug: admin#index set_locale: locale is en
Debug: admin#index startup:
Debug: admin#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: admin#index display_control: browser is chrome
Debug: admin#index set_current_user:
  [4;36;1mUser Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: admin#index login_from_cookie:
Debug: admin#index login_from_cookie: use_login is true, local
Debug: admin#index check_login:
Debug: admin#index check_login: not in cookies_test
Debug: admin#index check_login: not is_local?
Debug: admin#index check_login: using login
Debug: admin#index check_login: logged in
Rendering template within layouts/application
Rendering admin/index
  [4;36;1mGroup Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 298ms (View: 34, DB: 20) | 200 OK [http://localhost/admin]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing UsersController#index (for 127.0.0.1 at 2021-12-12 11:52:29) [GET]
  Parameters: {"action"=>"index", "controller"=>"users"}
Debug: users#index option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: users#index option: OS is Windows_NT
Debug: users#index is_remote?: false
  [4;35;1mOption Columns (11.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: users#index cookies_required:
Debug: users#index set_locale:
Debug: users#index set_locale: locale is en
Debug: users#index startup:
Debug: users#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: users#index display_control: browser is chrome
Debug: users#index set_current_user:
  [4;36;1mUser Columns (9.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: users#index login_from_cookie:
Debug: users#index login_from_cookie: use_login is true, local
Debug: users#index check_login:
Debug: users#index check_login: not in cookies_test
Debug: users#index check_login: not is_local?
Debug: users#index check_login: using login
Debug: users#index check_login: logged in
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` ORDER BY name[0m
Rendering template within layouts/application
Rendering users/index
  [4;35;1mGroup Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 279ms (View: 108, DB: 26) | 200 OK [http://localhost/users]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing UsersController#new (for 127.0.0.1 at 2021-12-12 11:52:31) [GET]
  Parameters: {"action"=>"new", "controller"=>"users"}
Debug: users#new option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: users#new option: OS is Windows_NT
Debug: users#new is_remote?: false
  [4;36;1mOption Columns (14.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: users#new cookies_required:
Debug: users#new set_locale:
Debug: users#new set_locale: locale is en
Debug: users#new startup:
Debug: users#new display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: users#new display_control: browser is chrome
Debug: users#new set_current_user:
  [4;35;1mUser Columns (9.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: users#new login_from_cookie:
Debug: users#new login_from_cookie: use_login is true, local
Debug: users#new check_login:
Debug: users#new check_login: not in cookies_test
Debug: users#new check_login: not is_local?
Debug: users#new check_login: using login
Debug: users#new check_login: logged in
Rendering template within layouts/application
Rendering users/new
  [4;35;1mGroup Columns (40.4ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 315ms (View: 66, DB: 65) | 200 OK [http://localhost/users/new]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing UsersController#create (for 127.0.0.1 at 2021-12-12 11:52:40) [POST]
  Parameters: {"commit"=>"Add User", "action"=>"create", "controller"=>"users", "user"=>{"name"=>"guest", "password_confirmation"=>"[FILTERED]", "admin"=>"0", "password"=>"[FILTERED]"}}
Debug: users#create option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: users#create option: OS is Windows_NT
Debug: users#create is_remote?: false
  [4;36;1mOption Columns (11.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: users#create cookies_required:
Debug: users#create set_locale:
Debug: users#create set_locale: locale is en
Debug: users#create startup:
Debug: users#create display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: users#create display_control: browser is chrome
Debug: users#create set_current_user:
  [4;35;1mUser Columns (4.7ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: users#create login_from_cookie:
Debug: users#create login_from_cookie: use_login is true, local
Debug: users#create check_login:
Debug: users#create check_login: not in cookies_test
Debug: users#create check_login: not is_local?
Debug: users#create check_login: using login
Debug: users#create check_login: logged in
  [4;35;1mSQL (1.0ms)[0m   [0mBEGIN[0m
  [4;36;1mUser Load (15.9ms)[0m   [0;1mSELECT `users`.id FROM `users` WHERE (`users`.`name` = BINARY 'guest') LIMIT 1[0m
  [4;35;1mUser Create (0.0ms)[0m   [0mINSERT INTO `users` (`name`, `salt`, `created_at`, `remember_me`, `updated_at`, `hashed_password`, `admin`, `remember_token`, `remember_token_expires`) VALUES('guest', '265864100.0626619138157518', '2021-12-12 11:52:40', 0, '2021-12-12 11:52:40', '863263c22e70fc81ff98d0ab090369f8dbf006a6', 0, NULL, NULL)[0m
  [4;36;1mSQL (63.1ms)[0m   [0;1mCOMMIT[0m
Redirected to http://localhost:3000/users
Completed in 287ms (DB: 98) | 302 Found [http://localhost/users]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing UsersController#index (for 127.0.0.1 at 2021-12-12 11:52:40) [GET]
  Parameters: {"action"=>"index", "controller"=>"users"}
Debug: users#index option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: users#index option: OS is Windows_NT
Debug: users#index is_remote?: false
  [4;36;1mOption Columns (11.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: users#index cookies_required:
Debug: users#index set_locale:
Debug: users#index set_locale: locale is en
Debug: users#index startup:
Debug: users#index display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: users#index display_control: browser is chrome
Debug: users#index set_current_user:
  [4;35;1mUser Columns (8.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: users#index login_from_cookie:
Debug: users#index login_from_cookie: use_login is true, local
Debug: users#index check_login:
Debug: users#index check_login: not in cookies_test
Debug: users#index check_login: not is_local?
Debug: users#index check_login: using login
Debug: users#index check_login: logged in
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` ORDER BY name[0m
Rendering template within layouts/application
Rendering users/index
  [4;36;1mGroup Columns (3.4ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 189ms (View: 29, DB: 23) | 200 OK [http://localhost/users]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:52:47) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;35;1mOption Columns (12.9ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;36;1mUser Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;35;1mReservation Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `reservations`[0m
  [4;36;1mCamper Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `campers`[0m
  [4;35;1mSpace Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
  [4;36;1mRigtype Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `rigtypes`[0m
  [4;35;1mReservation Load Including Associations (18.0ms)[0m   [0mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (18.9ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
  [4;36;1mGroup Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mGroup Load (0.0ms)[0m   [0mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;36;1mCamper Load (1.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (79.8ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (7.0ms)
Rendered shared/_reservations (159.6ms)
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 512ms (View: 174, DB: 59) | 200 OK [http://localhost/]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#logout (for 127.0.0.1 at 2021-12-12 11:52:50) [GET]
  Parameters: {"action"=>"logout", "controller"=>"login"}
Debug: login#logout option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: login#logout option: OS is Windows_NT
Debug: login#logout is_remote?: false
  [4;35;1mOption Columns (15.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: login#logout cookies_required:
Debug: login#logout set_locale:
Debug: login#logout set_locale: locale is en
Debug: login#logout startup:
Debug: login#logout display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#logout display_control: browser is chrome
Debug: login#logout set_current_user:
  [4;36;1mUser Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: login#logout login_from_cookie:
Debug: login#logout login_from_cookie: use_login is true, local
Debug: login#logout check_login:
Debug: login#logout check_login: not in cookies_test
Debug: login#logout check_login: not is_local?
Debug: login#logout check_login: using login
Debug: login#logout check_login: logged in
Debug: login#logout in login#logout
Debug: login#logout logout auth_token is nil
  [4;36;1mRememberLogin Load (34.9ms)[0m   [0;1mSELECT * FROM `remember_logins` WHERE (token = NULL) [0m
Info 12-12-21 1152: login#logout reset session
Info 12-12-21 1152: login#logout session[:top] = 
Redirected to http://localhost:3000/login/login
Completed in 236ms (DB: 57) | 302 Found [http://localhost/login/logout]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:53:01) [GET]
  Parameters: {"action"=>"login", "controller"=>"login"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (91.2ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Info 12-12-21 1153: login#login New session
Info 12-12-21 1153: login#login Startup with release 1.11, version 1750
  [4;35;1mSQL (29.9ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT version FROM schema_migrations[0m
Debug: login#login startup: Current database version is 87
  [4;35;1mDynamicString Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `dynamic_strings`[0m
  [4;36;1mDynamicString Load (0.0ms)[0m   [0;1mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.png') LIMIT 1[0m
  [4;35;1mDynamicString Load (1.0ms)[0m   [0mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.jpg') LIMIT 1[0m
Debug: login#login startup: update maps
Debug: login#login startup: cleanup old leftover space_alloc
  [4;36;1mSpaceAlloc Load (83.2ms)[0m   [0;1mSELECT * FROM `space_allocs` WHERE (updated_at < '2021-12-11') [0m
Debug: login#login startup: cleanup old reservations past retention date
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 1 and updated_on < '2020-11-12') [0m
Debug: login#login startup: get rid of bogus archives
  [4;36;1mArchive Load (0.0ms)[0m   [0;1mSELECT * FROM `archives` WHERE (reservation_id = 0) [0m
Debug: login#login startup: cleanup incomplete payments
  [4;35;1mPayment Load (1.0ms)[0m   [0mSELECT * FROM `payments` WHERE (amount = 0.0 and created_at < '2021-12-11 11:53:02' and credit_card_no = '' and cc_fee = 0.0) [0m
Debug: login#login startup:0 found
Debug: login#login startup: move charges from measured_charge to charge
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (measured_charge != 0.0) [0m
  [4;35;1mExtra Columns (8.0ms)[0m   [0mSHOW FIELDS FROM `extras`[0m
  [4;36;1mExtra Load (1.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`extra_type` = 3) ORDER BY position[0m
Debug: login#login startup: clean up unused extra charges
  [4;35;1mExtraCharge Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `extra_charges`[0m
  [4;36;1mExtraCharge Load Including Associations (0.0ms)[0m   [0;1mSELECT `extra_charges`.`id` AS t0_r0, `extra_charges`.`extra_id` AS t0_r1, `extra_charges`.`reservation_id` AS t0_r2, `extra_charges`.`number` AS t0_r3, `extra_charges`.`days` AS t0_r4, `extra_charges`.`weeks` AS t0_r5, `extra_charges`.`months` AS t0_r6, `extra_charges`.`daily_charges` AS t0_r7, `extra_charges`.`weekly_charges` AS t0_r8, `extra_charges`.`monthly_charges` AS t0_r9, `extra_charges`.`initial` AS t0_r10, `extra_charges`.`final` AS t0_r11, `extra_charges`.`measured_charge` AS t0_r12, `extra_charges`.`updated_on` AS t0_r13, `extra_charges`.`charge` AS t0_r14, `extra_charges`.`measured_rate` AS t0_r15, `extra_charges`.`created_on` AS t0_r16, `extra_charges`.`precision` AS t0_r17, `extras`.`id` AS t1_r0, `extras`.`name` AS t1_r1, `extras`.`counted` AS t1_r2, `extras`.`daily` AS t1_r3, `extras`.`weekly` AS t1_r4, `extras`.`monthly` AS t1_r5, `extras`.`onetime` AS t1_r6, `extras`.`charge` AS t1_r7, `extras`.`measured` AS t1_r8, `extras`.`rate` AS t1_r9, `extras`.`unit_name` AS t1_r10, `extras`.`occasional` AS t1_r11, `extras`.`extra_type` AS t1_r12, `extras`.`position` AS t1_r13, `extras`.`remote_display` AS t1_r14, `extras`.`active` AS t1_r15 FROM `extra_charges` LEFT OUTER JOIN `extras` ON `extras`.id = `extra_charges`.extra_id WHERE (initial = 0.0 and final = 0.0 and updated_on < '2021-12-12' and extras.extra_type = 2) [0m
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
Rendering template within layouts/login
Rendering login/login
Completed in 602ms (View: 6, DB: 226) | 200 OK [http://localhost/login/login]
  [4;35;1mSQL (1.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:53:05) [POST]
  Parameters: {"name"=>"guest", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;35;1mUser Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`name` = 'guest') LIMIT 1[0m
Redirected to http://localhost:3000/
Completed in 199ms (DB: 18) | 302 Found [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:53:05) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (12.9ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (8.9ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (6.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (13.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (76.8ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (4.0ms)
  [4;35;1mGroup Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (1.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (1.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (22.9ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (7.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_reservations (166.6ms)
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 469ms (View: 178, DB: 64) | 200 OK [http://localhost/]
  [4;35;1mSQL (1.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:55:30) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (86.6ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (8.7ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (3.1ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (9.9ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (20.9ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (5.0ms)
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (1.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (0.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (20.9ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (64.8ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_reservations (159.5ms)
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 583ms (View: 169, DB: 128) | 200 OK [http://localhost/]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:56:21) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (14.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (4.2ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (9.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (18.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (0.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (0.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (21.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_reservations (93.8ms)
Completed in 613ms (View: 298, DB: 48) | 200 OK [http://localhost/]
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#logout (for 127.0.0.1 at 2021-12-12 11:56:24) [GET]
  Parameters: {"action"=>"logout", "controller"=>"login"}
Debug: login#logout option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: login#logout option: OS is Windows_NT
Debug: login#logout is_remote?: false
  [4;35;1mOption Columns (34.7ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: login#logout cookies_required:
Debug: login#logout set_locale:
Debug: login#logout set_locale: locale is en
Debug: login#logout startup:
Debug: login#logout display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#logout display_control: browser is chrome
Debug: login#logout set_current_user:
  [4;36;1mUser Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: login#logout login_from_cookie:
Debug: login#logout login_from_cookie: use_login is true, local
Debug: login#logout check_login:
Debug: login#logout check_login: not in cookies_test
Debug: login#logout check_login: not is_local?
Debug: login#logout check_login: using login
Debug: login#logout check_login: logged in
Debug: login#logout in login#logout
Debug: login#logout logout auth_token is nil
  [4;36;1mRememberLogin Load (1.0ms)[0m   [0;1mSELECT * FROM `remember_logins` WHERE (token = NULL) [0m
Info 12-12-21 1156: login#logout reset session
Info 12-12-21 1156: login#logout session[:top] = 
Redirected to http://localhost:3000/login/login
Completed in 261ms (DB: 44) | 302 Found [http://localhost/login/logout]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:56:24) [GET]
  Parameters: {"action"=>"login", "controller"=>"login"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (14.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Info 12-12-21 1156: login#login New session
Info 12-12-21 1156: login#login Startup with release 1.11, version 1750
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT version FROM schema_migrations[0m
Debug: login#login startup: Current database version is 87
  [4;35;1mDynamicString Columns (4.8ms)[0m   [0mSHOW FIELDS FROM `dynamic_strings`[0m
  [4;36;1mDynamicString Load (0.0ms)[0m   [0;1mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.png') LIMIT 1[0m
  [4;35;1mDynamicString Load (0.0ms)[0m   [0mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.jpg') LIMIT 1[0m
Debug: login#login startup: update maps
Debug: login#login startup: cleanup old leftover space_alloc
  [4;36;1mSpaceAlloc Load (1.0ms)[0m   [0;1mSELECT * FROM `space_allocs` WHERE (updated_at < '2021-12-11') [0m
Debug: login#login startup: cleanup old reservations past retention date
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 1 and updated_on < '2020-11-12') [0m
Debug: login#login startup: get rid of bogus archives
  [4;36;1mArchive Load (0.0ms)[0m   [0;1mSELECT * FROM `archives` WHERE (reservation_id = 0) [0m
Debug: login#login startup: cleanup incomplete payments
  [4;35;1mPayment Load (1.0ms)[0m   [0mSELECT * FROM `payments` WHERE (amount = 0.0 and created_at < '2021-12-11 11:56:24' and credit_card_no = '' and cc_fee = 0.0) [0m
Debug: login#login startup:0 found
Debug: login#login startup: move charges from measured_charge to charge
  [4;36;1mExtraCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (measured_charge != 0.0) [0m
  [4;35;1mExtra Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `extras`[0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`extra_type` = 3) ORDER BY position[0m
Debug: login#login startup: clean up unused extra charges
  [4;35;1mExtraCharge Columns (6.0ms)[0m   [0mSHOW FIELDS FROM `extra_charges`[0m
  [4;36;1mExtraCharge Load Including Associations (1.0ms)[0m   [0;1mSELECT `extra_charges`.`id` AS t0_r0, `extra_charges`.`extra_id` AS t0_r1, `extra_charges`.`reservation_id` AS t0_r2, `extra_charges`.`number` AS t0_r3, `extra_charges`.`days` AS t0_r4, `extra_charges`.`weeks` AS t0_r5, `extra_charges`.`months` AS t0_r6, `extra_charges`.`daily_charges` AS t0_r7, `extra_charges`.`weekly_charges` AS t0_r8, `extra_charges`.`monthly_charges` AS t0_r9, `extra_charges`.`initial` AS t0_r10, `extra_charges`.`final` AS t0_r11, `extra_charges`.`measured_charge` AS t0_r12, `extra_charges`.`updated_on` AS t0_r13, `extra_charges`.`charge` AS t0_r14, `extra_charges`.`measured_rate` AS t0_r15, `extra_charges`.`created_on` AS t0_r16, `extra_charges`.`precision` AS t0_r17, `extras`.`id` AS t1_r0, `extras`.`name` AS t1_r1, `extras`.`counted` AS t1_r2, `extras`.`daily` AS t1_r3, `extras`.`weekly` AS t1_r4, `extras`.`monthly` AS t1_r5, `extras`.`onetime` AS t1_r6, `extras`.`charge` AS t1_r7, `extras`.`measured` AS t1_r8, `extras`.`rate` AS t1_r9, `extras`.`unit_name` AS t1_r10, `extras`.`occasional` AS t1_r11, `extras`.`extra_type` AS t1_r12, `extras`.`position` AS t1_r13, `extras`.`remote_display` AS t1_r14, `extras`.`active` AS t1_r15 FROM `extra_charges` LEFT OUTER JOIN `extras` ON `extras`.id = `extra_charges`.extra_id WHERE (initial = 0.0 and final = 0.0 and updated_on < '2021-12-12' and extras.extra_type = 2) [0m
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
Rendering template within layouts/login
Rendering login/login
Completed in 303ms (View: 6, DB: 37) | 200 OK [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:56:31) [POST]
  Parameters: {"name"=>"manager", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (11.7ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;35;1mUser Columns (9.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`name` = 'manager') LIMIT 1[0m
Redirected to http://localhost:3000/
Completed in 151ms (DB: 22) | 302 Found [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:56:32) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (12.5ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (0.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (6.7ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (15.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (17.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.9ms)
  [4;35;1mGroup Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (1.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (1.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (22.9ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (56.8ms)
Rendered shared/_reservations (148.6ms)
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 498ms (View: 160, DB: 57) | 200 OK [http://localhost/]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#logout (for 127.0.0.1 at 2021-12-12 11:56:40) [GET]
  Parameters: {"action"=>"logout", "controller"=>"login"}
Debug: login#logout option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#logout option: OS is Windows_NT
Debug: login#logout is_remote?: false
  [4;36;1mOption Columns (15.5ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#logout cookies_required:
Debug: login#logout set_locale:
Debug: login#logout set_locale: locale is en
Debug: login#logout startup:
Debug: login#logout display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#logout display_control: browser is chrome
Debug: login#logout set_current_user:
  [4;35;1mUser Columns (3.6ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: login#logout login_from_cookie:
Debug: login#logout login_from_cookie: use_login is true, local
Debug: login#logout check_login:
Debug: login#logout check_login: not in cookies_test
Debug: login#logout check_login: not is_local?
Debug: login#logout check_login: using login
Debug: login#logout check_login: logged in
Debug: login#logout in login#logout
Debug: login#logout logout auth_token is nil
  [4;35;1mRememberLogin Load (0.0ms)[0m   [0mSELECT * FROM `remember_logins` WHERE (token = NULL) [0m
Info 12-12-21 1156: login#logout reset session
Info 12-12-21 1156: login#logout session[:top] = 
Redirected to http://localhost:3000/login/login
Completed in 183ms (DB: 21) | 302 Found [http://localhost/login/logout]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:56:40) [GET]
  Parameters: {"action"=>"login", "controller"=>"login"}
Debug: login#login option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;35;1mOption Columns (11.6ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Info 12-12-21 1156: login#login New session
Info 12-12-21 1156: login#login Startup with release 1.11, version 1750
  [4;36;1mSQL (1.0ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSELECT version FROM schema_migrations[0m
Debug: login#login startup: Current database version is 87
  [4;36;1mDynamicString Columns (9.0ms)[0m   [0;1mSHOW FIELDS FROM `dynamic_strings`[0m
  [4;35;1mDynamicString Load (0.0ms)[0m   [0mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.png') LIMIT 1[0m
  [4;36;1mDynamicString Load (0.0ms)[0m   [0;1mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.jpg') LIMIT 1[0m
Debug: login#login startup: update maps
Debug: login#login startup: cleanup old leftover space_alloc
  [4;35;1mSpaceAlloc Load (0.0ms)[0m   [0mSELECT * FROM `space_allocs` WHERE (updated_at < '2021-12-11') [0m
Debug: login#login startup: cleanup old reservations past retention date
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 1 and updated_on < '2020-11-12') [0m
Debug: login#login startup: get rid of bogus archives
  [4;35;1mArchive Load (1.0ms)[0m   [0mSELECT * FROM `archives` WHERE (reservation_id = 0) [0m
Debug: login#login startup: cleanup incomplete payments
  [4;36;1mPayment Load (0.0ms)[0m   [0;1mSELECT * FROM `payments` WHERE (amount = 0.0 and created_at < '2021-12-11 11:56:41' and credit_card_no = '' and cc_fee = 0.0) [0m
Debug: login#login startup:0 found
Debug: login#login startup: move charges from measured_charge to charge
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (measured_charge != 0.0) [0m
  [4;36;1mExtra Columns (4.5ms)[0m   [0;1mSHOW FIELDS FROM `extras`[0m
  [4;35;1mExtra Load (0.0ms)[0m   [0mSELECT * FROM `extras` WHERE (`extras`.`extra_type` = 3) ORDER BY position[0m
Debug: login#login startup: clean up unused extra charges
  [4;36;1mExtraCharge Columns (4.8ms)[0m   [0;1mSHOW FIELDS FROM `extra_charges`[0m
  [4;35;1mExtraCharge Load Including Associations (1.0ms)[0m   [0mSELECT `extra_charges`.`id` AS t0_r0, `extra_charges`.`extra_id` AS t0_r1, `extra_charges`.`reservation_id` AS t0_r2, `extra_charges`.`number` AS t0_r3, `extra_charges`.`days` AS t0_r4, `extra_charges`.`weeks` AS t0_r5, `extra_charges`.`months` AS t0_r6, `extra_charges`.`daily_charges` AS t0_r7, `extra_charges`.`weekly_charges` AS t0_r8, `extra_charges`.`monthly_charges` AS t0_r9, `extra_charges`.`initial` AS t0_r10, `extra_charges`.`final` AS t0_r11, `extra_charges`.`measured_charge` AS t0_r12, `extra_charges`.`updated_on` AS t0_r13, `extra_charges`.`charge` AS t0_r14, `extra_charges`.`measured_rate` AS t0_r15, `extra_charges`.`created_on` AS t0_r16, `extra_charges`.`precision` AS t0_r17, `extras`.`id` AS t1_r0, `extras`.`name` AS t1_r1, `extras`.`counted` AS t1_r2, `extras`.`daily` AS t1_r3, `extras`.`weekly` AS t1_r4, `extras`.`monthly` AS t1_r5, `extras`.`onetime` AS t1_r6, `extras`.`charge` AS t1_r7, `extras`.`measured` AS t1_r8, `extras`.`rate` AS t1_r9, `extras`.`unit_name` AS t1_r10, `extras`.`occasional` AS t1_r11, `extras`.`extra_type` AS t1_r12, `extras`.`position` AS t1_r13, `extras`.`remote_display` AS t1_r14, `extras`.`active` AS t1_r15 FROM `extra_charges` LEFT OUTER JOIN `extras` ON `extras`.id = `extra_charges`.extra_id WHERE (initial = 0.0 and final = 0.0 and updated_on < '2021-12-12' and extras.extra_type = 2) [0m
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
Rendering template within layouts/login
Rendering login/login
Completed in 313ms (View: 7, DB: 36) | 200 OK [http://localhost/login/login]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 11:56:45) [POST]
  Parameters: {"name"=>"guest", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;35;1mOption Columns (13.8ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;36;1mUser Columns (4.8ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`name` = 'guest') LIMIT 1[0m
Redirected to http://localhost:3000/
Completed in 147ms (DB: 20) | 302 Found [http://localhost/login/login]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 11:56:45) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;36;1mOption Load (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;35;1mOption Columns (11.7ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;36;1mUser Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;35;1mReservation Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `reservations`[0m
  [4;36;1mCamper Columns (4.3ms)[0m   [0;1mSHOW FIELDS FROM `campers`[0m
  [4;35;1mSpace Columns (8.3ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
  [4;36;1mRigtype Columns (3.6ms)[0m   [0;1mSHOW FIELDS FROM `rigtypes`[0m
  [4;35;1mReservation Load Including Associations (10.0ms)[0m   [0mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (19.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (3.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (7.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (56.8ms)
  [4;36;1mGroup Columns (8.9ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mGroup Load (5.0ms)[0m   [0mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;36;1mCamper Load (0.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (30.8ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_reservations (160.5ms)
Completed in 442ms (View: 161, DB: 64) | 200 OK [http://localhost/]
  [4;35;1mSQL (1.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 11:56:51) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;36;1mOption Columns (65.5ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;35;1mUser Columns (3.9ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (1.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Completed in 1215ms (View: 849, DB: 101) | 200 OK [http://localhost/reservation/available]
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.6ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 11:58:55) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;35;1mOption Columns (15.2ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;36;1mUser Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;35;1mReservation Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `reservations`[0m
  [4;36;1mCamper Columns (5.6ms)[0m   [0;1mSHOW FIELDS FROM `campers`[0m
  [4;35;1mCamper Load (1.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Columns (4.8ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Completed in 1453ms (View: 1096, DB: 51) | 200 OK [http://localhost/reservation/available]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 11:59:56) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;36;1mReservation Columns (4.9ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.2ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (1.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Columns (24.3ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Completed in 1585ms (View: 1241, DB: 64) | 200 OK [http://localhost/reservation/available]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#logout (for 127.0.0.1 at 2021-12-12 12:00:12) [GET]
  Parameters: {"action"=>"logout", "controller"=>"login"}
Debug: login#logout option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: login#logout option: OS is Windows_NT
Debug: login#logout is_remote?: false
  [4;35;1mOption Columns (16.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: login#logout cookies_required:
Debug: login#logout set_locale:
Debug: login#logout set_locale: locale is en
Debug: login#logout startup:
Debug: login#logout display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#logout display_control: browser is chrome
Debug: login#logout set_current_user:
  [4;36;1mUser Columns (8.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326034) [0m
Debug: login#logout login_from_cookie:
Debug: login#logout login_from_cookie: use_login is true, local
Debug: login#logout check_login:
Debug: login#logout check_login: not in cookies_test
Debug: login#logout check_login: not is_local?
Debug: login#logout check_login: using login
Debug: login#logout check_login: logged in
Debug: login#logout in login#logout
Debug: login#logout logout auth_token is nil
  [4;36;1mRememberLogin Load (0.0ms)[0m   [0;1mSELECT * FROM `remember_logins` WHERE (token = NULL) [0m
Info 12-12-21 1200: login#logout reset session
Info 12-12-21 1200: login#logout session[:top] = 
Redirected to http://localhost:3000/login/login
Completed in 241ms (DB: 26) | 302 Found [http://localhost/login/logout]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 12:00:13) [GET]
  Parameters: {"action"=>"login", "controller"=>"login"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Info 12-12-21 1200: login#login New session
Info 12-12-21 1200: login#login Startup with release 1.11, version 1750
  [4;35;1mSQL (0.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT version FROM schema_migrations[0m
Debug: login#login startup: Current database version is 87
  [4;35;1mDynamicString Columns (4.3ms)[0m   [0mSHOW FIELDS FROM `dynamic_strings`[0m
  [4;36;1mDynamicString Load (0.0ms)[0m   [0;1mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.png') LIMIT 1[0m
  [4;35;1mDynamicString Load (0.0ms)[0m   [0mSELECT * FROM `dynamic_strings` WHERE (`dynamic_strings`.`name` = 'Logo.jpg') LIMIT 1[0m
Debug: login#login startup: update maps
Debug: login#login startup: cleanup old leftover space_alloc
  [4;36;1mSpaceAlloc Load (1.0ms)[0m   [0;1mSELECT * FROM `space_allocs` WHERE (updated_at < '2021-12-11') [0m
Debug: login#login startup: cleanup old reservations past retention date
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 1 and updated_on < '2020-11-12') [0m
Debug: login#login startup: get rid of bogus archives
  [4;36;1mArchive Load (0.0ms)[0m   [0;1mSELECT * FROM `archives` WHERE (reservation_id = 0) [0m
Debug: login#login startup: cleanup incomplete payments
  [4;35;1mPayment Load (0.0ms)[0m   [0mSELECT * FROM `payments` WHERE (amount = 0.0 and created_at < '2021-12-11 12:00:13' and credit_card_no = '' and cc_fee = 0.0) [0m
Debug: login#login startup:0 found
Debug: login#login startup: move charges from measured_charge to charge
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (measured_charge != 0.0) [0m
  [4;35;1mExtra Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `extras`[0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (`extras`.`extra_type` = 3) ORDER BY position[0m
Debug: login#login startup: clean up unused extra charges
  [4;35;1mExtraCharge Columns (2.8ms)[0m   [0mSHOW FIELDS FROM `extra_charges`[0m
  [4;36;1mExtraCharge Load Including Associations (1.0ms)[0m   [0;1mSELECT `extra_charges`.`id` AS t0_r0, `extra_charges`.`extra_id` AS t0_r1, `extra_charges`.`reservation_id` AS t0_r2, `extra_charges`.`number` AS t0_r3, `extra_charges`.`days` AS t0_r4, `extra_charges`.`weeks` AS t0_r5, `extra_charges`.`months` AS t0_r6, `extra_charges`.`daily_charges` AS t0_r7, `extra_charges`.`weekly_charges` AS t0_r8, `extra_charges`.`monthly_charges` AS t0_r9, `extra_charges`.`initial` AS t0_r10, `extra_charges`.`final` AS t0_r11, `extra_charges`.`measured_charge` AS t0_r12, `extra_charges`.`updated_on` AS t0_r13, `extra_charges`.`charge` AS t0_r14, `extra_charges`.`measured_rate` AS t0_r15, `extra_charges`.`created_on` AS t0_r16, `extra_charges`.`precision` AS t0_r17, `extras`.`id` AS t1_r0, `extras`.`name` AS t1_r1, `extras`.`counted` AS t1_r2, `extras`.`daily` AS t1_r3, `extras`.`weekly` AS t1_r4, `extras`.`monthly` AS t1_r5, `extras`.`onetime` AS t1_r6, `extras`.`charge` AS t1_r7, `extras`.`measured` AS t1_r8, `extras`.`rate` AS t1_r9, `extras`.`unit_name` AS t1_r10, `extras`.`occasional` AS t1_r11, `extras`.`extra_type` AS t1_r12, `extras`.`position` AS t1_r13, `extras`.`remote_display` AS t1_r14, `extras`.`active` AS t1_r15 FROM `extra_charges` LEFT OUTER JOIN `extras` ON `extras`.id = `extra_charges`.extra_id WHERE (initial = 0.0 and final = 0.0 and updated_on < '2021-12-12' and extras.extra_type = 2) [0m
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
Rendering template within layouts/login
Rendering login/login
Completed in 234ms (View: 5, DB: 26) | 200 OK [http://localhost/login/login]
  [4;35;1mSQL (1.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 12:00:16) [POST]
  Parameters: {"name"=>"manager", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (16.5ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;35;1mUser Columns (4.1ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`name` = 'manager') LIMIT 1[0m
Rendering template within layouts/login
Rendering login/login
Completed in 162ms (View: 6, DB: 23) | 200 OK [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing LoginController#login (for 127.0.0.1 at 2021-12-12 12:00:21) [POST]
  Parameters: {"name"=>"manager", "commit"=>"Login", "action"=>"login", "controller"=>"login", "password"=>"[FILTERED]"}
Debug: login#login option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: login#login option: OS is Windows_NT
Debug: login#login is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: login#login cookies_required:
Debug: login#login set_locale:
Debug: login#login set_locale: locale is en
Debug: login#login startup:
Debug: login#login display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: login#login display_control: browser is chrome
Debug: login#login login_from_cookie:
Debug: login#login login_from_cookie: use_login is true, local
Debug: login#login in login#login
  [4;35;1mUser Columns (4.6ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`name` = 'manager') LIMIT 1[0m
Redirected to http://localhost:3000/
Completed in 147ms (DB: 19) | 302 Found [http://localhost/login/login]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#list (for 127.0.0.1 at 2021-12-12 12:00:21) [GET]
  Parameters: {"action"=>"list", "controller"=>"reservation"}
Debug: reservation#list option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#list option: OS is Windows_NT
Debug: reservation#list is_remote?: false
  [4;36;1mOption Columns (10.1ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#list cookies_required:
Debug: reservation#list set_locale:
Debug: reservation#list set_locale: locale is en
Debug: reservation#list startup:
Debug: reservation#list display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#list display_control: browser is chrome
Debug: reservation#list set_current_user:
  [4;35;1mUser Columns (3.1ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#list login_from_cookie:
Debug: reservation#list login_from_cookie: use_login is true, local
Debug: reservation#list check_login:
Debug: reservation#list check_login: not in cookies_test
Debug: reservation#list check_login: not is_local?
Debug: reservation#list check_login: using login
Debug: reservation#list check_login: logged in
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` ORDER BY position LIMIT 1[0m
  [4;36;1mReservation Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (8.1ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mSpace Columns (4.8ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mRigtype Columns (3.0ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mReservation Load Including Associations (10.0ms)[0m   [0;1mSELECT `reservations`.`id` AS t0_r0, `reservations`.`camper_id` AS t0_r1, `reservations`.`rigtype_id` AS t0_r2, `reservations`.`space_id` AS t0_r3, `reservations`.`discount_id` AS t0_r4, `reservations`.`group_id` AS t0_r5, `reservations`.`startdate` AS t0_r6, `reservations`.`enddate` AS t0_r7, `reservations`.`deposit` AS t0_r8, `reservations`.`override_total` AS t0_r9, `reservations`.`special_request` AS t0_r10, `reservations`.`slides` AS t0_r11, `reservations`.`length` AS t0_r12, `reservations`.`rig_age` AS t0_r13, `reservations`.`vehicle_license` AS t0_r14, `reservations`.`vehicle_state` AS t0_r15, `reservations`.`checked_in` AS t0_r16, `reservations`.`adults` AS t0_r17, `reservations`.`pets` AS t0_r18, `reservations`.`kids` AS t0_r19, `reservations`.`lock_version` AS t0_r20, `reservations`.`total` AS t0_r21, `reservations`.`confirm` AS t0_r22, `reservations`.`created_at` AS t0_r23, `reservations`.`ext_charges` AS t0_r24, `reservations`.`tax_str` AS t0_r25, `reservations`.`tax_amount` AS t0_r26, `reservations`.`unconfirmed_remote` AS t0_r27, `reservations`.`log` AS t0_r28, `reservations`.`vehicle_license_2` AS t0_r29, `reservations`.`vehicle_state_2` AS t0_r30, `reservations`.`recommender_id` AS t0_r31, `reservations`.`seasonal_rate` AS t0_r32, `reservations`.`seasonal_charges` AS t0_r33, `reservations`.`seasonal` AS t0_r34, `reservations`.`gateway_transaction` AS t0_r35, `reservations`.`onetime_discount` AS t0_r36, `reservations`.`archived` AS t0_r37, `reservations`.`updated_on` AS t0_r38, `reservations`.`storage` AS t0_r39, `reservations`.`updated_at` AS t0_r40, `reservations`.`sitetype_id` AS t0_r41, `reservations`.`next` AS t0_r42, `reservations`.`prev` AS t0_r43, `reservations`.`cancelled` AS t0_r44, `reservations`.`checked_out` AS t0_r45, `campers`.`id` AS t1_r0, `campers`.`last_name` AS t1_r1, `campers`.`first_name` AS t1_r2, `campers`.`address` AS t1_r3, `campers`.`city` AS t1_r4, `campers`.`state` AS t1_r5, `campers`.`mail_code` AS t1_r6, `campers`.`activity` AS t1_r7, `campers`.`lock_version` AS t1_r8, `campers`.`phone` AS t1_r9, `campers`.`email` AS t1_r10, `campers`.`idnumber` AS t1_r11, `campers`.`country_id` AS t1_r12, `campers`.`phone_2` AS t1_r13, `campers`.`address2` AS t1_r14, `campers`.`notes` AS t1_r15, `campers`.`addl` AS t1_r16, `spaces`.`id` AS t2_r0, `spaces`.`name` AS t2_r1, `spaces`.`power_15a` AS t2_r2, `spaces`.`power_30a` AS t2_r3, `spaces`.`power_50a` AS t2_r4, `spaces`.`water` AS t2_r5, `spaces`.`sewer` AS t2_r6, `spaces`.`length` AS t2_r7, `spaces`.`width` AS t2_r8, `spaces`.`sitetype_id` AS t2_r9, `spaces`.`price_id` AS t2_r10, `spaces`.`special_condition` AS t2_r11, `spaces`.`unavailable` AS t2_r12, `spaces`.`position` AS t2_r13, `spaces`.`remote_reservable` AS t2_r14, `spaces`.`current` AS t2_r15, `spaces`.`active` AS t2_r16, `rigtypes`.`id` AS t3_r0, `rigtypes`.`name` AS t3_r1, `rigtypes`.`position` AS t3_r2, `rigtypes`.`active` AS t3_r3 FROM `reservations` LEFT OUTER JOIN `campers` ON `campers`.id = `reservations`.camper_id LEFT OUTER JOIN `spaces` ON `spaces`.id = `reservations`.space_id LEFT OUTER JOIN `rigtypes` ON `rigtypes`.id = `reservations`.rigtype_id WHERE (checked_in = 0 and confirm = 1 and archived = 0) ORDER BY unconfirmed_remote desc, startdate, group_id, spaces.position asc[0m
Rendering template within layouts/application
Rendering reservation/list
Rendered shared/_list (17.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (54.8ms)
Rendered shared/_list (4.0ms)
  [4;35;1mGroup Columns (3.9ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mGroup Load (1.0ms)[0m   [0;1mSELECT * FROM `groups` WHERE (`groups`.`id` = 1) ORDER BY name asc[0m
  [4;35;1mCamper Load (0.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` = 2) ORDER BY last_name, first_name asc[0m
Rendered shared/_list (20.9ms)
Rendered shared/_list (5.0ms)
Rendered shared/_list (6.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_list (4.0ms)
Rendered shared/_reservations (139.6ms)
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 400ms (View: 151, DB: 51) | 200 OK [http://localhost/]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 12:00:25) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;36;1mOption Columns (12.5ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;36;1mReservation Columns (5.9ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (3.8ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (1.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Columns (3.5ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
  [4;36;1mGroup Columns (9.2ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 1218ms (View: 891, DB: 55) | 200 OK [http://localhost/reservation/available]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.8ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#new (for 127.0.0.1 at 2021-12-12 12:00:47) [GET]
  Parameters: {"stage"=>"new", "action"=>"new", "controller"=>"reservation"}
Debug: reservation#new option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#new option: OS is Windows_NT
Debug: reservation#new is_remote?: false
  [4;35;1mOption Columns (10.9ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#new cookies_required:
Debug: reservation#new set_locale:
Debug: reservation#new set_locale: locale is en
Debug: reservation#new startup:
Debug: reservation#new display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#new display_control: browser is chrome
Debug: reservation#new set_current_user:
  [4;36;1mUser Columns (7.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#new login_from_cookie:
Debug: reservation#new login_from_cookie: use_login is true, local
Debug: reservation#new check_login:
Debug: reservation#new check_login: not in cookies_test
Debug: reservation#new check_login: not is_local?
Debug: reservation#new check_login: using login
Debug: reservation#new check_login: logged in
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (CONFIRM = 0 and updated_at < '2021-12-12 11:30:48' and archived = 0) [0m
  [4;35;1mReservation Columns (4.2ms)[0m   [0mSHOW FIELDS FROM `reservations`[0m
Debug: reservation#new checking for open 2021-12-12 to 2021-12-13
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mSpace Load (133.3ms)[0m   [0mSELECT * FROM `spaces` WHERE (active = 1 AND unavailable = 0 AND id NOT IN (SELECT space_id FROM reservations WHERE archived = 0 AND enddate > '2021-12-12' AND startdate < '2021-12-13' )) ORDER BY position[0m
  [4;36;1mSpace Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mSitetype Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `sitetypes`[0m
  [4;36;1mSitetype Load (0.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` IN (1,2,3)) [0m
  [4;35;1mPrice Columns (3.5ms)[0m   [0mSHOW FIELDS FROM `prices`[0m
  [4;36;1mPrice Load (0.0ms)[0m   [0;1mSELECT * FROM `prices` WHERE (`prices`.`id` IN (1,2,3,4,5)) [0m
Rendering template within layouts/application
Rendering reservation/new
Rendered reservation/_dates (102.8ms)
Rendered shared/_count (10.2ms)
  [4;35;1mRigtype Columns (4.4ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `rigtypes` WHERE (active = 1) [0m
  [4;35;1mRigtype Load (0.0ms)[0m   [0mSELECT * FROM `rigtypes` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mDiscount Columns (4.6ms)[0m   [0;1mSHOW FIELDS FROM `discounts`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `discounts` WHERE (active = 1) [0m
  [4;36;1mDiscount Load (0.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mRecommender Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `recommenders`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `recommenders` WHERE (active = 1) [0m
  [4;35;1mRecommender Load (1.0ms)[0m   [0mSELECT * FROM `recommenders` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSitetype Load (1.0ms)[0m   [0;1mSELECT * FROM `sitetypes` WHERE (active = 1) ORDER BY position[0m
Rendered shared/_sitetype (20.9ms)
  [4;35;1mExtra Load (0.0ms)[0m   [0mSELECT * FROM `extras` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mExtra Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `extras`[0m
  [4;35;1mGroup Columns (21.8ms)[0m   [0mSHOW FIELDS FROM `groups`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 942ms (View: 396, DB: 212) | 200 OK [http://localhost/reservation/new?stage=new]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 12:00:52) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;35;1mOption Load (1.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;36;1mOption Columns (12.0ms)[0m   [0;1mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;35;1mUser Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.0ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;36;1mReservation Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mCamper Columns (4.8ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (0.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 24 AND space_id = 63 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 21 AND space_id = 90 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 22 AND space_id = 91 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 25 AND space_id = 91 AND enddate > '2021-12-20' AND startdate < '2021-12-24') [0m
Rendering template within layouts/application
Rendering reservation/available
Debug: reservation#available header
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
Debug: reservation#available get_header_months enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05, next day to output is 2022-01-01 header count is 27
Debug: reservation#available date is 2022-01-01, next day to output is 2022-02-01 header count is 31
Debug: reservation#available date is 2022-02-01, next day to output is 2022-03-01 header count is 28
Debug: reservation#available date is 2022-03-01, next day to output is 2022-04-01 header count is 31
Debug: reservation#available date is 2022-04-01, next day to output is 2022-05-01 header count is 30
Debug: reservation#available available
Debug: reservation#available av_init
Debug: reservation#available starting at 2021-12-05 and ending at 2022-04-11
  [4;36;1mSpace Load (1.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mSpace Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `spaces`[0m
Debug: reservation#available 
space one no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space two no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space three no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 4 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 5 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 6 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 7 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-07
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 2)
Debug: reservation#available output_empty sd = 2021-12-05 count = 2
Debug: reservation#available set date to 2021-12-07
Debug: reservation#available date is 2021-12-07
Debug: reservation#available got new reservation
Debug: reservation#available count for 1, Joe Peterson 2021-12-07 to 2021-12-12 is 5
Debug: reservation#available startdate is 2021-12-07, enddate is 2021-12-12, this_date is 2021-12-07
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 7, Mary Foley 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-13, ed=2022-04-11
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 8 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 3, Tony Jones 2021-12-05 to 2021-12-12 is 7
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-12, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-12, ed=2022-04-11
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 9 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-06
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 1)
Debug: reservation#available output_empty sd = 2021-12-05 count = 1
Debug: reservation#available set date to 2021-12-06
Debug: reservation#available date is 2021-12-06
Debug: reservation#available got new reservation
Debug: reservation#available count for 2, Jack Jasperson 2021-12-06 to 2021-12-13 is 7
Debug: reservation#available startdate is 2021-12-06, enddate is 2021-12-13, this_date is 2021-12-06
Debug: reservation#available date is 2021-12-13
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-13, ed=2021-12-16
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 18, Muffin Smith 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 10 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 11 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 4, Thomas Peterson 2021-11-22 to 2021-12-13 is 8
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-13, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 11, Randolph Allen 2021-12-13 to 2021-12-14 is 1
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-14, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-14, ed=2022-04-11
Debug: reservation#available 2021-12-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-14, 118)
Debug: reservation#available output_empty sd = 2021-12-14 count = 118
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 12 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 5, Muffin Smith 2021-11-12 to 2021-12-24 is 19
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-24, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 13 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available got new reservation
Debug: reservation#available count for 20, Thomas Peterson 2021-12-04 to 2021-12-10 is 5
Debug: reservation#available startdate is 2021-12-05, enddate is 2021-12-10, this_date is 2021-12-05
Debug: reservation#available date is 2021-12-10
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-10, ed=2021-12-12
Debug: reservation#available 2021-12-10
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-10, 2)
Debug: reservation#available output_empty sd = 2021-12-10 count = 2
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 8, Tony Jackson 2021-12-12 to 2021-12-19 is 7
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-19, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-19, ed=2022-04-11
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 113)
Debug: reservation#available output_empty sd = 2021-12-19 count = 113
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 14 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 15 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 10, Jim Pool 2021-12-12 to 2022-01-12 is 31
Debug: reservation#available startdate is 2021-12-12, enddate is 2022-01-12, this_date is 2021-12-12
Debug: reservation#available date is 2022-01-12
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-12, ed=2022-04-11
Debug: reservation#available 2022-01-12
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-12, 89)
Debug: reservation#available output_empty sd = 2022-01-12 count = 89
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 16 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-12
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available set date to 2021-12-12
Debug: reservation#available date is 2021-12-12
Debug: reservation#available got new reservation
Debug: reservation#available count for 9, Clayton Pollock 2021-12-12 to 2021-12-13 is 1
Debug: reservation#available startdate is 2021-12-12, enddate is 2021-12-13, this_date is 2021-12-12
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 12, Test Camper 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 17 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 13, Jack Jasperson 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-17, ed=2022-04-11
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 115)
Debug: reservation#available output_empty sd = 2021-12-17 count = 115
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 18 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 19 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 20 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 14, Jack Preston 2021-12-14 to 2022-01-14 is 31
Debug: reservation#available startdate is 2021-12-14, enddate is 2022-01-14, this_date is 2021-12-14
Debug: reservation#available date is 2022-01-14
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-14, ed=2022-04-11
Debug: reservation#available 2022-01-14
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-14, 87)
Debug: reservation#available output_empty sd = 2022-01-14 count = 87
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 21 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 22 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 23 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 24 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 25 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 26 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 27 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 28 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 29 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 30 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 31 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 32 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 33 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 34 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 15, Clayton Pollock 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 35 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 36 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-08
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: before currentDate, output_empty(2021-12-05, 3)
Debug: reservation#available output_empty sd = 2021-12-05 count = 3
Debug: reservation#available set date to 2021-12-08
Debug: reservation#available date is 2021-12-08
Debug: reservation#available got new reservation
Debug: reservation#available count for 6, Test Camper 2021-12-08 to 2021-12-15 is 7
Debug: reservation#available startdate is 2021-12-08, enddate is 2021-12-15, this_date is 2021-12-08
Debug: reservation#available date is 2021-12-15
Debug: reservation#available got new reservation
Debug: reservation#available count for 16, Jim Pool 2021-12-15 to 2021-12-25 is 10
Debug: reservation#available startdate is 2021-12-15, enddate is 2021-12-25, this_date is 2021-12-15
Debug: reservation#available date is 2021-12-25
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-25, ed=2022-04-11
Debug: reservation#available 2021-12-25
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-25, 107)
Debug: reservation#available output_empty sd = 2021-12-25 count = 107
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 37 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 38 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 39 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 40 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 41 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 17, Randolph Allen 2021-12-16 to 2021-12-23 is 7
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-23, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-23
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-23, ed=2022-04-11
Debug: reservation#available 2021-12-23
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-23, 109)
Debug: reservation#available output_empty sd = 2021-12-23 count = 109
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 42 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 43 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 44 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 45 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 46 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 47 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 48 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 49 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 50 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 51 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 52 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 53 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 54 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 55 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 56 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 57 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 58 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 59 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 60 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 61 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 62 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 23, Jack Preston 2021-12-13 to 2021-12-17 is 4
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-17, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-17
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-17, ed=2021-12-19
Debug: reservation#available 2021-12-17
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-17, 2)
Debug: reservation#available output_empty sd = 2021-12-17 count = 2
Debug: reservation#available set date to 2021-12-19
Debug: reservation#available date is 2021-12-19
Debug: reservation#available got new reservation
Debug: reservation#available count for 19, Tom Jones 2021-12-19 to 2022-01-02 is 14
Debug: reservation#available startdate is 2021-12-19, enddate is 2022-01-02, this_date is 2021-12-19
Debug: reservation#available date is 2022-01-02
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2022-01-02, ed=2022-04-11
Debug: reservation#available 2022-01-02
Debug: reservation#available handle_cells: after currentDate, output_empty(2022-01-02, 99)
Debug: reservation#available output_empty sd = 2022-01-02 count = 99
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 63 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-14
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 1)
Debug: reservation#available output_empty sd = 2021-12-13 count = 1
Debug: reservation#available set date to 2021-12-14
Debug: reservation#available date is 2021-12-14
Debug: reservation#available got new reservation
Debug: reservation#available count for 24, Tony Jackson 2021-12-14 to 2021-12-21 is 7
Debug: reservation#available startdate is 2021-12-14, enddate is 2021-12-21, this_date is 2021-12-14
Debug: reservation#available date is 2021-12-21
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-21, ed=2022-04-11
Debug: reservation#available 2021-12-21
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-21, 111)
Debug: reservation#available output_empty sd = 2021-12-21 count = 111
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 64 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 65 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 66 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 67 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 68 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 69 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 70 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 71 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 72 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 73 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 74 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 75 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 76 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 77 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 78 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 79 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 80 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 81 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 82 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 83 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 84 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 85 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 86 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 87 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 88 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 89 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 90 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-13
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available set date to 2021-12-13
Debug: reservation#available date is 2021-12-13
Debug: reservation#available got new reservation
Debug: reservation#available count for 21, Tom Jones 2021-12-13 to 2021-12-16 is 3
Debug: reservation#available startdate is 2021-12-13, enddate is 2021-12-16, this_date is 2021-12-13
Debug: reservation#available date is 2021-12-16
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-16, ed=2022-04-11
Debug: reservation#available 2021-12-16
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-16, 116)
Debug: reservation#available output_empty sd = 2021-12-16 count = 116
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 91 has reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available date is 2021-12-05
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-05, ed=2021-12-16
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 3)
Debug: reservation#available output_empty sd = 2021-12-13 count = 3
Debug: reservation#available set date to 2021-12-16
Debug: reservation#available date is 2021-12-16
Debug: reservation#available got new reservation
Debug: reservation#available count for 22, Tony Jones 2021-12-16 to 2021-12-19 is 3
Debug: reservation#available startdate is 2021-12-16, enddate is 2021-12-19, this_date is 2021-12-16
Debug: reservation#available date is 2021-12-19
Debug: reservation#available open
Debug: reservation#available handle_cells sd=2021-12-19, ed=2021-12-20
Debug: reservation#available 2021-12-19
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-19, 1)
Debug: reservation#available output_empty sd = 2021-12-19 count = 1
Debug: reservation#available set date to 2021-12-20
Debug: reservation#available date is 2021-12-20
Debug: reservation#available got new reservation
Debug: reservation#available count for 25, Thomas Peterson 2021-12-20 to 2021-12-24 is 4
Debug: reservation#available startdate is 2021-12-20, enddate is 2021-12-24, this_date is 2021-12-20
Debug: reservation#available date is 2021-12-24
Debug: reservation#available open
Debug: reservation#available no more reservations
Debug: reservation#available handle_cells sd=2021-12-24, ed=2022-04-11
Debug: reservation#available 2021-12-24
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-24, 108)
Debug: reservation#available output_empty sd = 2021-12-24 count = 108
Debug: reservation#available set date to 2022-04-11
Debug: reservation#available 
space 92 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 93 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 94 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 95 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 96 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 97 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 98 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 99 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space 100 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
Debug: reservation#available 
space Dry-1 no reservations
Debug: reservation#available available enddate is 2022-04-11
Debug: reservation#available handle_cells sd=2021-12-05, ed=2022-04-11
Debug: reservation#available 2021-12-05
Debug: reservation#available handle_cells: starts before and spans currentDate, output_empty(2021-12-05, 7)
Debug: reservation#available output_empty sd = 2021-12-05 count = 7
Debug: reservation#available 2021-12-12
Debug: reservation#available handle_cells: outside of closed: date == currentDate
Debug: reservation#available 2021-12-13
Debug: reservation#available handle_cells: after currentDate, output_empty(2021-12-13, 119)
Debug: reservation#available output_empty sd = 2021-12-13 count = 119
  [4;36;1mGroup Columns (8.6ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 1279ms (View: 943, DB: 56) | 200 OK [http://localhost/reservation/available]
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#show (for 127.0.0.1 at 2021-12-12 12:00:56) [GET]
  Parameters: {"action"=>"show", "reservation_id"=>"1", "controller"=>"reservation"}
Debug: reservation#show option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#show option: OS is Windows_NT
Debug: reservation#show is_remote?: false
  [4;35;1mOption Columns (14.0ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#show cookies_required:
Debug: reservation#show set_locale:
Debug: reservation#show set_locale: locale is en
Debug: reservation#show startup:
Debug: reservation#show display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#show display_control: browser is chrome
Debug: reservation#show set_current_user:
  [4;36;1mUser Columns (11.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#show login_from_cookie:
Debug: reservation#show login_from_cookie: use_login is true, local
Debug: reservation#show check_login:
Debug: reservation#show check_login: not in cookies_test
Debug: reservation#show check_login: not is_local?
Debug: reservation#show check_login: using login
Debug: reservation#show check_login: logged in
  [4;36;1mReservation Columns (35.9ms)[0m   [0;1mSHOW FIELDS FROM `reservations`[0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 1) [0m
Debug: reservation#show got res from params
  [4;36;1mPayment Columns (5.0ms)[0m   [0;1mSHOW FIELDS FROM `payments`[0m
  [4;35;1mPayment Load (0.0ms)[0m   [0mSELECT * FROM `payments` WHERE (`payments`.`reservation_id` = 1) [0m
  [4;36;1mIntegration Load (0.0ms)[0m   [0;1mSELECT * FROM `integrations` LIMIT 1[0m
  [4;35;1mIntegration Columns (6.0ms)[0m   [0mSHOW FIELDS FROM `integrations`[0m
Debug: reservation#show integration name is None
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 1) [0m
Debug: reservation#show charges_for_display
  [4;35;1mCharge Load (0.0ms)[0m   [0mSELECT * FROM `charges` WHERE (reservation_id = 1) ORDER BY start_date ASC[0m
  [4;36;1mCharge Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `charges`[0m
Debug: reservation#show charges 126.0
Debug: reservation#show calculate_extras:
  [4;35;1mExtraCharge Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `extra_charges`[0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1) [0m
Debug: reservation#show added extras 126.0
  [4;35;1mVariableCharge Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `variable_charges`[0m
  [4;36;1mVariableCharge Load (1.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 1) [0m
Debug: reservation#show added variable 126.0
Debug: reservation#show after onetime discount 126.0
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (`reservations`.`id` = 1) [0m
  [4;36;1mCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `charges` WHERE (`charges`.`reservation_id` = 1) [0m
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1) [0m
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 1) [0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 1) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Columns (5.0ms)[0m   [0mSHOW FIELDS FROM `taxes`[0m
  [4;36;1mTax Destroy (1.0ms)[0m   [0;1mDELETE FROM `taxes` WHERE `id` = 197[0m
  [4;35;1mSQL (132.6ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Destroy (0.0ms)[0m   [0mDELETE FROM `taxes` WHERE `id` = 198[0m
  [4;36;1mSQL (28.9ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT * FROM `taxrates` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mSpace Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `spaces`[0m
  [4;35;1mSpace Load (1.0ms)[0m   [0mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
  [4;36;1mSitetype Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `sitetypes`[0m
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mTaxrate Columns (6.0ms)[0m   [0;1mSHOW FIELDS FROM `taxrates`[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 1) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Sales tax', '4.75%', 5.99, 0, 1)[0m
  [4;36;1mSQL (188.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTaxrate Load (0.0ms)[0m   [0mSELECT `taxrates`.id FROM `taxrates` INNER JOIN `sitetypes_taxrates` ON `taxrates`.id = `sitetypes_taxrates`.taxrate_id WHERE (`taxrates`.`id` = 2) AND (`sitetypes_taxrates`.sitetype_id = 2 ) ORDER BY position LIMIT 1[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mTax Create (0.0ms)[0m   [0mINSERT INTO `taxes` (`name`, `rate`, `amount`, `count`, `reservation_id`) VALUES('Room tax', '$1.25 per night', 6.25, 5, 1)[0m
  [4;36;1mSQL (84.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mTax Load (0.0ms)[0m   [0mSELECT * FROM `taxes` WHERE (reservation_id = 1) ORDER BY name[0m
got 2 tax records
record 0 is 247
record 1 is 246
Debug: reservation#show saving total 126.0 and tax_amount 12.24
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
Debug: reservation#show getting taxes
  [4;36;1mTax Load (0.0ms)[0m   [0;1mSELECT * FROM `taxes` WHERE (`taxes`.`reservation_id` = 1) [0m
Debug: reservation#show getting payments
  [4;35;1mPayment Load (1.0ms)[0m   [0mSELECT * FROM `payments` WHERE (`payments`.`reservation_id` = 1) [0m
  [4;36;1mSeason Columns (32.9ms)[0m   [0;1mSHOW FIELDS FROM `seasons`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `seasons` WHERE (active = 1) [0m
Debug: reservation#show 2 seasons
Debug: reservation#show Cancel action = abandon
Rendering template within layouts/application
Rendering reservation/show
  [4;36;1mGroup Columns (126.4ms)[0m   [0;1mSHOW FIELDS FROM `groups`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mGroup Load (0.0ms)[0m   [0mSELECT * FROM `groups` ORDER BY name asc[0m
Rendered reservation/_group (190.5ms)
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Rendered reservation/_date (87.3ms)
  [4;35;1mCamper Columns (4.0ms)[0m   [0mSHOW FIELDS FROM `campers`[0m
  [4;36;1mCamper Load (1.0ms)[0m   [0;1mSELECT * FROM `campers` WHERE (`campers`.`id` = 1) ORDER BY last_name, first_name asc[0m
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Rendered shared/_country (22.0ms)
Rendered shared/_camper (144.0ms)
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Rendered reservation/_vehicle (35.3ms)
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mRigtype Columns (19.7ms)[0m   [0mSHOW FIELDS FROM `rigtypes`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `rigtypes` WHERE (active = 1) [0m
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mRigtype Load (0.0ms)[0m   [0;1mSELECT * FROM `rigtypes` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mRigtype Load (0.0ms)[0m   [0mSELECT * FROM `rigtypes` WHERE (`rigtypes`.`id` = 5) ORDER BY position[0m
Rendered shared/_rigtype (66.3ms)
  [4;36;1mRecommender Columns (4.0ms)[0m   [0;1mSHOW FIELDS FROM `recommenders`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `recommenders` WHERE (active = 1) [0m
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mRecommender Load (0.0ms)[0m   [0mSELECT * FROM `recommenders` WHERE (active = 1) ORDER BY position[0m
Rendered shared/_recommender (49.9ms)
  [4;36;1mDiscount Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `discounts`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `discounts` WHERE (active = 1) [0m
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mDiscount Load (1.0ms)[0m   [0mSELECT * FROM `discounts` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mDiscount Load (1.0ms)[0m   [0;1mSELECT * FROM `discounts` WHERE (`discounts`.`id` = 1) ORDER BY position[0m
Rendered shared/_discount (55.8ms)
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
Rendered shared/_special (12.0ms)
Rendered shared/_misc (257.4ms)
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
  [4;35;1mCreditcard Load (1.0ms)[0m   [0mSELECT * FROM `creditcards` WHERE (active = 1) ORDER BY position[0m
  [4;36;1mCreditcard Columns (16.9ms)[0m   [0;1mSHOW FIELDS FROM `creditcards`[0m
Rendered reservation/_creditcard (63.8ms)
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT * FROM `options` LIMIT 1[0m
  [4;36;1mExtra Columns (10.0ms)[0m   [0;1mSHOW FIELDS FROM `extras`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `extras` [0m
  [4;36;1mExtra Load (0.0ms)[0m   [0;1mSELECT * FROM `extras` WHERE (active = 1) ORDER BY position[0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (EXTRA_ID = 1 and RESERVATION_ID = 1) [0m
  [4;36;1mExtraCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `extra_charges` WHERE (EXTRA_ID = 2 and RESERVATION_ID = 1) [0m
  [4;35;1mExtraCharge Load (0.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1 AND `extra_charges`.`extra_id` = 2) LIMIT 1[0m
  [4;36;1mSpace Load (0.0ms)[0m   [0;1mSELECT * FROM `spaces` WHERE (`spaces`.`id` = 7) ORDER BY position[0m
Rendered shared/_extras (149.1ms)
  [4;35;1mSitetype Load (0.0ms)[0m   [0mSELECT * FROM `sitetypes` WHERE (`sitetypes`.`id` = 2) ORDER BY position[0m
  [4;36;1mCACHE (0.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Rendered shared/_site (52.6ms)
discount is false
season count is 2
days
  [4;35;1mSeason Load (1.0ms)[0m   [0mSELECT * FROM `seasons` WHERE (`seasons`.`id` = 1) [0m
discount is false
season count is 2
days
  [4;36;1mSeason Load (0.0ms)[0m   [0;1mSELECT * FROM `seasons` WHERE (`seasons`.`id` = 2) [0m
  [4;35;1mExtraCharge Load (1.0ms)[0m   [0mSELECT * FROM `extra_charges` WHERE (`extra_charges`.`reservation_id` = 1) [0m
  [4;36;1mVariableCharge Load (0.0ms)[0m   [0;1mSELECT * FROM `variable_charges` WHERE (`variable_charges`.`reservation_id` = 1) [0m
  [4;35;1mCreditcard Load (0.0ms)[0m   [0mSELECT * FROM `creditcards` WHERE (`creditcards`.`id` = 4) ORDER BY position[0m
  [4;36;1mCreditcard Load (0.0ms)[0m   [0;1mSELECT * FROM `creditcards` WHERE (`creditcards`.`id` = 1) ORDER BY position[0m
Rendered reservation/_charges (176.9ms)
Rendered shared/_space_summary (259.4ms)
Rendered shared/_log (6.0ms)
Rendered reservation/_update_mail_msg (13.5ms)
  [4;35;1mCACHE (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `groups` [0m
Completed in 2770ms (View: 1445, DB: 769) | 200 OK [http://localhost/reservation/show?reservation_id=1]
  [4;36;1mSQL (1.0ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing ReservationController#available (for 127.0.0.1 at 2021-12-12 12:01:01) [GET]
  Parameters: {"action"=>"available", "controller"=>"reservation"}
Debug: reservation#available option:
  [4;36;1mOption Load (1.0ms)[0m   [0;1mSELECT * FROM `options` LIMIT 1[0m
Debug: reservation#available option: OS is Windows_NT
Debug: reservation#available is_remote?: false
  [4;35;1mOption Columns (11.9ms)[0m   [0mSHOW FIELDS FROM `options`[0m
Debug: reservation#available cookies_required:
Debug: reservation#available set_locale:
Debug: reservation#available set_locale: locale is en
Debug: reservation#available startup:
Debug: reservation#available display_control: user agent is Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36
Debug: reservation#available display_control: browser is chrome
Debug: reservation#available set_current_user:
  [4;36;1mUser Columns (15.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.0ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 113326033) [0m
Debug: reservation#available login_from_cookie:
Debug: reservation#available login_from_cookie: use_login is true, local
Debug: reservation#available check_login:
Debug: reservation#available check_login: not in cookies_test
Debug: reservation#available check_login: not is_local?
Debug: reservation#available check_login: using login
Debug: reservation#available check_login: logged in
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE ((enddate >= '2021-12-12' or checked_in = 1) and confirm = 1 and archived = 0) ORDER BY space_id,startdate ASC[0m
  [4;35;1mReservation Columns (31.0ms)[0m   [0mSHOW FIELDS FROM `reservations`[0m
  [4;36;1mCamper Columns (9.0ms)[0m   [0;1mSHOW FIELDS FROM `campers`[0m
  [4;35;1mCamper Load (1.0ms)[0m   [0mSELECT * FROM `campers` WHERE (`campers`.`id` IN (11,6,7,12,13,8,9,1,2,3,10,4,5)) [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 1 AND space_id = 7 AND enddate > '2021-12-07' AND startdate < '2021-12-12') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 7 AND space_id = 7 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 3 AND space_id = 8 AND enddate > '2021-12-05' AND startdate < '2021-12-12') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 2 AND space_id = 9 AND enddate > '2021-12-06' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 18 AND space_id = 9 AND enddate > '2021-12-16' AND startdate < '2021-12-19') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 4 AND space_id = 11 AND enddate > '2021-11-22' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 11 AND space_id = 11 AND enddate > '2021-12-13' AND startdate < '2021-12-14') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 5 AND space_id = 12 AND enddate > '2021-11-12' AND startdate < '2021-12-24') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 20 AND space_id = 13 AND enddate > '2021-12-04' AND startdate < '2021-12-10') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 8 AND space_id = 13 AND enddate > '2021-12-12' AND startdate < '2021-12-19') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 10 AND space_id = 15 AND enddate > '2021-12-12' AND startdate < '2022-01-12') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 9 AND space_id = 16 AND enddate > '2021-12-12' AND startdate < '2021-12-13') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 12 AND space_id = 16 AND enddate > '2021-12-13' AND startdate < '2021-12-16') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 13 AND space_id = 17 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;36;1mReservation Load (1.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 14 AND space_id = 20 AND enddate > '2021-12-14' AND startdate < '2022-01-14') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 15 AND space_id = 34 AND enddate > '2021-12-14' AND startdate < '2021-12-21') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 6 AND space_id = 36 AND enddate > '2021-12-08' AND startdate < '2021-12-15') [0m
  [4;35;1mReservation Load (0.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 16 AND space_id = 36 AND enddate > '2021-12-15' AND startdate < '2021-12-25') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 17 AND space_id = 41 AND enddate > '2021-12-16' AND startdate < '2021-12-23') [0m
  [4;35;1mReservation Load (1.0ms)[0m   [0mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 23 AND space_id = 62 AND enddate > '2021-12-13' AND startdate < '2021-12-17') [0m
  [4;36;1mReservation Load (0.0ms)[0m   [0;1mSELECT * FROM `reservations` WHERE (archived = 0 AND id != 19 AND space_id = 62 AND enddate > '2021-12-19' AND startdate < '2022-01-02') [0m
