<%= javascript_include_tag 'tablelock'%>
<div id="explain">
  <%= @prompt.body %>
</div>
<div id="action">
  <% form_tag :action => 'find_space' do %>
    <div id='dates'>
      <%= render :partial => 'shared/dates' %>
    </div>
    <% if @option.show_remote_available? %>
      <span id="count">
    <% else %>
      <span id="count" style ="display: none">
    <% end %>
      <%= render :partial => 'shared/count' %>
      </span>
    <p>
      <% if @option.use_remote_adults? %>
        <label for="reservation_adults"><b><%= I18n.t('reservation.nr_Adults') %></b></label>
        <%= text_field 'reservation', 'adults', {:size => '2', :autocomplete => 'off'} %>
      <% end %>

      <% if @option.use_remote_pets? %>
        <label for="reservation_pets"><b><%= I18n.t('reservation.nr_Pets') %></b></label>
        <%= text_field 'reservation', 'pets', {:size => '2', :autocomplete => 'off'} %>
      <% end %>

      <% if @option.use_remote_children? %>
        <label for="reservation_kids"><b><%= I18n.t('reservation.nr_Children') %></b></label>
        <%= text_field 'reservation', 'kids', {:size => '2', :autocomplete => 'off'} %>
      <% end %>
    </p>

    <p>
      <% if @option.use_remote_rig_type? && Rigtype.active.count > 0 %>
        <b><%= I18n.t('reservation.RigType') %></b>
        <%= collection_select(:reservation, :rigtype_id, Rigtype.active, :id, :name, {:prompt => true}) %>
      <% end %>
      <% if @option.use_remote_length? %>
        <label for="reservation_length"><b><%= I18n.t('reservation.Length') %></b></label>
        <%= text_field 'reservation', 'length', {:size => '2', :autocomplete => 'off'} %>
      <% end %>
      <% if @option.use_remote_slides? %>
        <label for="reservation_slides"><b><%= I18n.t('reservation.nr_Slides') %></b></label>
        <%= text_field 'reservation', 'slides', {:size => '2', :autocomplete => 'off'} %>
      <% end %>
      <% if @option.use_remote_age? %>
        <label for="reservation_rig_age"><b><%= I18n.t('reservation.RigAge') %></b></label>
        <%= text_field 'reservation', 'rig_age', {:size => '3', :autocomplete => 'off'} %>
      <% end %>
    </p>
    <p>
    <% if @option.remote_discount? && Discount.active.count > 0 %>
      <b><%= I18n.t('reservation.Discount') %></b>
      <%= collection_select(:reservation, :discount_id, Discount.active, :id, :name, {:prompt => true}) %>
    <% end %>
    <% if @option.remote_recommendations? && @option.use_recommend? && Recommender.active.count > 0 %>
      <b><%= I18n.t('reservation.RecommendedBy') %></b>
      <%= collection_select(:reservation, :recommender_id, Recommender.active, :id, :name, {:prompt => true}) %>
    <% end %>
    </p>
  <%= render :partial => 'shared/sitetype' %>
<div>
<% @extras.each do |e| -%>
  <span class="extra">
    <b><%= e.name %></b>
    <%= check_box 'extra', "extra#{e.id}", {}, '1','0' %>
    <% if e.extra_type == Extra::COUNTED -%>
      <b><%= I18n.t('reservation.Count') %></b>
      <%= text_field 'extra', "count#{e.id}", {:size => '2', :value => '1', :autocomplete => 'off'} %>
    <% end -%>
  </span>
<% end -%>
</div>
  <%# <p> %>
    <%= submit_tag I18n.t('reservation.FindSpace'), :disable_with => "Processing..." %>
  <%# </p> %>
<% end %>
  <% if @reservation && @reservation.id && @reservation.id > 0 %>
    <%= button_to  I18n.t('reservation.Cancel'), { :action => :abandon_remote, :reservation_id => @reservation.id },
						  :confirm => I18n.t('remote.Cancel'),
						  :method => "post" %>
  <% else %>
    <%= button_to  I18n.t('reservation.Cancel'), :action => :finished, :method => "post" %>
  <% end %>
  <br>
  <a href="../images/sitemap.jpg" onclick="goclicky(this); return false;" target="_blank" class="sitemap">Site Map</a>
  <br><br>
  <table id="available" class="available" cellspacing="0" admin-session="<%= session[:admin_status] %>">
    <thead>
      <%= header -%>
    </thead>
    <tbody>
      <%= available() %>
    </tbody>
  </table>
</div>
<script type="text/javascript">
  TableLock("available", "av_space", "av_date", "locked");
  var cells = document.querySelectorAll(".available td");
  var table = document.getElementsByTagName('table')[0];
  for (var i = 0; i < cells.length; i++) {
    if (cells[i].hasChildNodes()) {
      if(cells[i].childNodes[0].tagName == "A") {
        cells[i].parentElement.setAttribute("hasspace", "true");
      }
    }else{
      cells[i].setAttribute('style', 'cursor: pointer');
      cells[i].addEventListener("click", function(){
        handler(this);
     });
    } 
  }
  function handler(param) {
    var parentTr = param.parentElement;
    if(parentTr.getAttribute("hasspace") != "true") {
      var obj = parentTr.getElementsByTagName("td")[0];
      var cellindex = param.cellIndex;

      var start_date = parentTr.parentElement.parentElement.children[0].children[1].children[cellindex].textContent;
      var spaceTxt = obj.textContent;
      location.href = "/remotereservation?"+"start_date="+start_date+"&space="+spaceTxt;
    }else{
      alert("This space is already reserved. Try a different space.");
      return;
    }
  }

  document.getElementsByClassName("cds_body")[0].onclick = function() {myFunction()};
  document.getElementsByClassName("cds_body")[1].onclick = function() {myFunction()};

  function myFunction() {
    var startDate = glbStartCalendarDateSelect.selected_date;
    var endDate = glbEndCalendarDateSelect.selected_date;
    if(endDate <= startDate) {
      startDate.setDate(startDate.getDate() + 1);
      var o = $H({ day: startDate.getDate(), month: startDate.getMonth(), year: startDate.getFullYear(), hour: startDate.getHours(), minute: startDate.getMinutes() });
      glbEndCalendarDateSelect.updateSelectedDate(o, true);
      glbEndCalendarDateSelect.refresh();
      startDate.setDate(startDate.getDate() - 1);
    }
  };
  
  function FindLeftWindowBoundry()
  {
    // In Internet Explorer window.screenLeft is the window's left boundry
    if (window.screenLeft)
    {
      return window.screenLeft;
    }
    
    // In Firefox window.screenX is the window's left boundry
    if (window.screenX)
      return window.screenX;
      
    return 0;
  }
  // Find Left Boundry of current Window
  function FindTopWindowBoundry()
  {
    // In Internet Explorer window.screenLeft is the window's left boundry
    if (window.screenTop)
    {
      return window.screenTop;
    }
    
    // In Firefox window.screenY is the window's left boundry
    if (window.screenY)
      return window.screenY;
      
    return 0;
  }
      
  function goclicky(meh)
  {
      console.log(FindLeftWindowBoundry(), FindTopWindowBoundry());
      var x = screen.width/2 - 700/2 + FindLeftWindowBoundry();
      var y = screen.height/2 - 450/2 + FindTopWindowBoundry();
      window.open(meh.href, 'sharegplus','height=500,width=700,left='+x+',top='+y);
  }
</script>
